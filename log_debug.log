2019-05-21T17:33:27.094Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-21T17:33:27.103Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: %o
2019-05-21T17:33:27.105Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: %o
2019-05-21T17:33:27.136Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-21T17:33:27.150Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: %o
2019-05-21T17:33:27.166Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T21:55:47.800Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T21:55:47.893Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T21:55:47.981Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 1, null, [length]: 2 ]
2019-05-31T21:55:48.013Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T21:58:18.003Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T21:58:18.015Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T21:58:18.042Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T21:58:18.042Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:15:43.556Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T22:15:43.571Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:15:43.627Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T22:15:43.627Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T22:15:43.628Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: %o
2019-05-31T22:15:43.754Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:18:20.895Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T22:18:20.909Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:18:20.941Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T22:18:20.941Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T22:18:20.942Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T22:18:20.959Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: DefaultInputDataFromGenericName: [ -3,
  'Error: couldn\'t find a default input file for generic_name "js file": [ -3,\n  `Error: couldn\'t find a default input file for name_literal "js/file.json": \'{\\\\n\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\n\\\\t"filename": "jsonic-parse.js",\\\\n\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\n\\\\t"modulename": "JSONICParse",\\\\n\\\\t"processname": "jsonic-parse"\\\\n}\'`,\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T22:18:21.003Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:19:16.324Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: %o
2019-05-31T22:19:16.325Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default: null },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: FUNCTION_NAME is not defined"`,
  [length]: 2 ]
2019-05-31T22:31:25.438Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T22:31:25.469Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:31:25.507Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T22:31:25.507Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T22:31:25.509Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T22:31:25.510Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:31:25.511Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:31:25.513Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:31:25.514Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T22:31:25.516Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:31:25.542Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}'
2019-05-31T22:31:25.543Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0':
   '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:31:25.543Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}'
2019-05-31T22:31:25.544Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ -3,
  `Error: couldn't find a default input file for name_literal "js/file.json": '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}'`,
  [length]: 2 ]
2019-05-31T22:31:25.544Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ -3,
  'Error: couldn\'t find a default input file for generic_name "js file": [ -3,\n  `Error: couldn\'t find a default input file for name_literal "js/file.json": \'{\\\\n\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\n\\\\t"filename": "jsonic-parse.js",\\\\n\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\n\\\\t"modulename": "JSONICParse",\\\\n\\\\t"processname": "jsonic-parse",\\\\n\\\\t"logger": true\\\\n}\'`,\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T22:31:25.545Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:warn: DefaultInputDataFromGenericName: [ -3,
  'Error: couldn\'t find a default input file for generic_name "js file": [ -3,\n  `Error: couldn\'t find a default input file for name_literal "js/file.json": \'{\\\\n\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\n\\\\t"filename": "jsonic-parse.js",\\\\n\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\n\\\\t"modulename": "JSONICParse",\\\\n\\\\t"processname": "jsonic-parse",\\\\n\\\\t"logger": true\\\\n}\'`,\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T22:31:25.579Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:34:19.513Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T22:34:19.527Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:34:19.571Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T22:34:19.571Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T22:34:19.572Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T22:34:19.573Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:34:19.574Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:34:19.575Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:34:19.579Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T22:34:19.581Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:34:19.607Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:34:19.607Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:34:19.609Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:34:19.668Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:36:12.521Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: %o
2019-05-31T22:36:12.522Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: FUNCTION_NAME is not defined"`,
  [length]: 2 ]
2019-05-31T22:38:37.744Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T22:38:37.759Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:38:37.800Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T22:38:37.800Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T22:38:37.801Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T22:38:37.802Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:38:37.803Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:38:37.804Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:38:37.805Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T22:38:37.807Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:38:37.832Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:38:37.832Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:38:37.833Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:38:37.871Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:38:42.082Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: %o
2019-05-31T22:38:42.083Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: %o
2019-05-31T22:38:42.084Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: FUNCTION_NAME is not defined"`,
  [length]: 2 ]
2019-05-31T22:41:30.915Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T22:41:30.948Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:41:30.986Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T22:41:30.986Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T22:41:30.992Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T22:41:30.993Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:41:31.008Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:41:31.010Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:41:31.019Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T22:41:31.049Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:41:31.073Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:41:31.073Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:41:31.075Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:41:31.152Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:41:36.838Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: { editor_input:
   '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T22:41:36.839Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: %o
2019-05-31T22:41:36.840Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: FUNCTION_NAME is not defined"`,
  [length]: 2 ]
2019-05-31T22:46:42.551Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T22:46:42.564Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:46:42.609Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T22:46:42.610Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T22:46:42.610Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T22:46:42.611Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:46:42.613Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:46:42.615Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:46:42.616Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T22:46:42.618Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:46:42.645Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:46:42.646Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:46:42.647Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:46:42.677Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:46:47.663Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: [object Object]
2019-05-31T22:46:47.664Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: { editor_input:
   '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}\n' }
2019-05-31T22:46:47.665Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: %o
2019-05-31T22:46:47.665Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: FUNCTION_NAME is not defined"`,
  [length]: 2 ]
2019-05-31T22:47:16.263Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T22:47:16.278Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:47:16.279Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T22:47:16.280Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T22:47:16.280Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T22:47:16.282Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:47:16.283Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:47:16.284Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:47:16.286Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T22:47:16.287Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:47:16.287Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:47:16.288Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:47:16.288Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:47:16.318Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:47:19.677Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}\n' }
2019-05-31T22:47:19.677Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: { editor_input:
   '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}\n' }
2019-05-31T22:47:19.678Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: %o
2019-05-31T22:47:19.697Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: FUNCTION_NAME is not defined"`,
  [length]: 2 ]
2019-05-31T22:52:00.510Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T22:52:00.525Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:52:00.592Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T22:52:00.593Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T22:52:00.593Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T22:52:00.594Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:52:00.595Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:52:00.596Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:52:00.598Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T22:52:00.598Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:52:00.616Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:52:00.616Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:52:00.617Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:52:00.649Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:52:07.014Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}\n' }
2019-05-31T22:52:07.015Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}\n' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}\n' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:52:07.016Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: {
	"templatename": "Resources/templates/jsfile.hbs",
	"filename": "jsonic-parse.js",
	"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",
	"modulename": "JSONICParse",
	"processname": "jsonic-parse",
	"logger": true
}
 undefined
2019-05-31T22:52:07.016Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: Error: [ -2,
  `Error: input_context is either null or not an object '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}\\n'`,
  [length]: 2 ]
2019-05-31T22:52:07.017Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ -2,
  `Error: input_context is either null or not an object '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}\\n'`,
  [length]: 2 ]
2019-05-31T22:52:07.017Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ -3,
  'Error: generating output from given input answer "{ editor_input:\n   \'{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}\\n\' }": [ -2,\n  `Error: input_context is either null or not an object \'{\\\\n\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\n\\\\t"filename": "jsonic-parse.js",\\\\n\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\n\\\\t"modulename": "JSONICParse",\\\\n\\\\t"processname": "jsonic-parse",\\\\n\\\\t"logger": true\\\\n}\\\\n\'`,\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T22:52:07.018Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: %o
2019-05-31T22:52:07.018Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: answer is not defined"`,
  [length]: 2 ]
2019-05-31T22:55:40.564Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T22:55:40.580Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:55:40.616Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T22:55:40.618Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T22:55:40.620Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T22:55:40.620Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:55:40.622Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:55:40.623Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:55:40.624Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T22:55:40.625Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:55:40.649Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:55:40.650Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:55:40.650Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:55:40.683Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:55:43.991Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T22:55:43.992Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:55:43.993Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: {
	"templatename": "Resources/templates/jsfile.hbs",
	"filename": "jsonic-parse.js",
	"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",
	"modulename": "JSONICParse",
	"processname": "jsonic-parse",
	"logger": true
} undefined
2019-05-31T22:55:43.994Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: Error: [ -2,
  `Error: input_context is either null or not an object '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}'`,
  [length]: 2 ]
2019-05-31T22:55:43.994Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ -2,
  `Error: input_context is either null or not an object '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}'`,
  [length]: 2 ]
2019-05-31T22:55:43.994Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ -3,
  'Error: generating output from given input answer "{ editor_input:\n   \'{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}\' }": [ -2,\n  `Error: input_context is either null or not an object \'{\\\\n\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\n\\\\t"filename": "jsonic-parse.js",\\\\n\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\n\\\\t"modulename": "JSONICParse",\\\\n\\\\t"processname": "jsonic-parse",\\\\n\\\\t"logger": true\\\\n}\'`,\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T22:55:43.995Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: answer is not defined"`,
  [length]: 2 ]
2019-05-31T22:55:43.995Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: answer is not defined"`,
  [length]: 2 ]
2019-05-31T22:57:23.637Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T22:57:23.652Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:57:23.687Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T22:57:23.687Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T22:57:23.688Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T22:57:23.689Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:57:23.690Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:57:23.693Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:57:23.695Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T22:57:23.696Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:57:23.721Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:57:23.725Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:57:23.725Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T22:57:23.760Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T22:57:27.074Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T22:57:27.076Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T22:57:27.076Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: {
	"templatename": "Resources/templates/jsfile.hbs",
	"filename": "jsonic-parse.js",
	"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",
	"modulename": "JSONICParse",
	"processname": "jsonic-parse",
	"logger": true
} undefined
2019-05-31T22:57:27.077Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: Error: [ -2,
  `Error: input_context is either null or not an object '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}'`,
  [length]: 2 ]
2019-05-31T22:57:27.077Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ -2,
  `Error: input_context is either null or not an object '{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}'`,
  [length]: 2 ]
2019-05-31T22:57:27.078Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ -3,
  'Error: generating output from given input answer "{ editor_input:\n   \'{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}\' }": [ -2,\n  `Error: input_context is either null or not an object \'{\\\\n\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\n\\\\t"filename": "jsonic-parse.js",\\\\n\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\n\\\\t"modulename": "JSONICParse",\\\\n\\\\t"processname": "jsonic-parse",\\\\n\\\\t"logger": true\\\\n}\'`,\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T22:57:27.078Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -8,
  'Error: couldn\'t construct output from inquirer_editor_answer { editor_input:\n   \'{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}\' }: [ -3,\n  \'Error: generating output from given input answer "{ editor_input:\\n   \\\'{\\\\n\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\n\\\\t"filename": "jsonic-parse.js",\\\\n\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\n\\\\t"modulename": "JSONICParse",\\\\n\\\\t"processname": "jsonic-parse",\\\\n\\\\t"logger": true\\\\n}\\\' }": [ -2,\\n  `Error: input_context is either null or not an object \\\'{\\\\\\\\n\\\\\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\\\\\n\\\\\\\\t"filename": "jsonic-parse.js",\\\\\\\\n\\\\\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\\\\\n\\\\\\\\t"modulename": "JSONICParse",\\\\\\\\n\\\\\\\\t"processname": "jsonic-parse",\\\\\\\\n\\\\\\\\t"logger": true\\\\\\\\n}\\\'`,\\n  [length]: 2 ]\',\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T22:57:27.079Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -8,
  'Error: couldn\'t construct output from inquirer_editor_answer { editor_input:\n   \'{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}\' }: [ -3,\n  \'Error: generating output from given input answer "{ editor_input:\\n   \\\'{\\\\n\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\n\\\\t"filename": "jsonic-parse.js",\\\\n\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\n\\\\t"modulename": "JSONICParse",\\\\n\\\\t"processname": "jsonic-parse",\\\\n\\\\t"logger": true\\\\n}\\\' }": [ -2,\\n  `Error: input_context is either null or not an object \\\'{\\\\\\\\n\\\\\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\\\\\n\\\\\\\\t"filename": "jsonic-parse.js",\\\\\\\\n\\\\\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\\\\\n\\\\\\\\t"modulename": "JSONICParse",\\\\\\\\n\\\\\\\\t"processname": "jsonic-parse",\\\\\\\\n\\\\\\\\t"logger": true\\\\\\\\n}\\\'`,\\n  [length]: 2 ]\',\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:01:19.345Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:01:19.359Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:01:19.409Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:01:19.409Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:01:19.410Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js filefg' }
2019-05-31T23:01:19.411Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js filefg',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js filefg',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:01:19.412Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/filefg.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/filefg.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js filefg',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:01:19.413Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/filefg.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/filefg.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/filefg.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js filefg',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:01:19.415Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/filefg.json": Error: ENOENT: no such file or directory, open 'js/filefg.json'`,
  [length]: 2 ]
2019-05-31T23:01:19.415Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/filefg.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/filefg.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/filefg.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js filefg',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:01:19.453Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "Resources/defaults/js/filefg.json": Error: ENOENT: no such file or directory, open 'Resources/defaults/js/filefg.json'`,
  [length]: 2 ]
2019-05-31T23:01:19.455Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0':
   '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/filefg.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js filefg',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:01:19.456Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json": Error: ENOENT: no such file or directory, open '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json'`,
  [length]: 2 ]
2019-05-31T23:01:19.456Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ -3,
  'Error: couldn\'t find a default input file for name_literal "js/filefg.json": [ -4,\n  `JSONICParse.ParseFilePath: Error: reading file "/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json": Error: ENOENT: no such file or directory, open \'/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json\'`,\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:01:19.457Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ -3,
  'Error: couldn\'t find a default input file for generic_name "js filefg": [ -3,\n  \'Error: couldn\\\'t find a default input file for name_literal "js/filefg.json": [ -4,\\n  `JSONICParse.ParseFilePath: Error: reading file "/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json": Error: ENOENT: no such file or directory, open \\\'/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json\\\'`,\\n  [length]: 2 ]\',\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:01:19.457Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:warn: DefaultInputDataFromGenericName: [ -3,
  'Error: couldn\'t find a default input file for generic_name "js filefg": [ -3,\n  \'Error: couldn\\\'t find a default input file for name_literal "js/filefg.json": [ -4,\\n  `JSONICParse.ParseFilePath: Error: reading file "/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json": Error: ENOENT: no such file or directory, open \\\'/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json\\\'`,\\n  [length]: 2 ]\',\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:01:19.484Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:01:25.252Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input: 'null' }
2019-05-31T23:01:25.253Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0': { editor_input: 'null' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0': { editor_input: 'null' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:01:25.254Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: 'null' undefined
2019-05-31T23:01:25.254Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: Error: [ -2,
  "Error: input_context is either null or not an object 'null'",
  [length]: 2 ]
2019-05-31T23:01:25.255Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ -2,
  "Error: input_context is either null or not an object 'null'",
  [length]: 2 ]
2019-05-31T23:01:25.255Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ -3,
  `Error: generating output from given input answer "{ editor_input: 'null' }": [ -2,\n  "Error: input_context is either null or not an object 'null'",\n  [length]: 2 ]`,
  [length]: 2 ]
2019-05-31T23:01:25.256Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -8,
  'Error: couldn\'t construct output from inquirer_editor_answer { editor_input: \'null\' }: [ -3,\n  `Error: generating output from given input answer "{ editor_input: \'null\' }": [ -2,\\n  "Error: input_context is either null or not an object \'null\'",\\n  [length]: 2 ]`,\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:01:25.256Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -8,
  'Error: couldn\'t construct output from inquirer_editor_answer { editor_input: \'null\' }: [ -3,\n  `Error: generating output from given input answer "{ editor_input: \'null\' }": [ -2,\\n  "Error: input_context is either null or not an object \'null\'",\\n  [length]: 2 ]`,\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:07:16.909Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:07:16.922Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:16.965Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:07:16.965Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:07:16.966Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js filefg' }
2019-05-31T23:07:16.966Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js filefg',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js filefg',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:16.967Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/filefg.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/filefg.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js filefg',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:16.969Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/filefg.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/filefg.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/filefg.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js filefg',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:16.970Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/filefg.json": Error: ENOENT: no such file or directory, open 'js/filefg.json'`,
  [length]: 2 ]
2019-05-31T23:07:16.973Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/filefg.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/filefg.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/filefg.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js filefg',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:16.973Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "Resources/defaults/js/filefg.json": Error: ENOENT: no such file or directory, open 'Resources/defaults/js/filefg.json'`,
  [length]: 2 ]
2019-05-31T23:07:16.974Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0':
   '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/filefg.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js filefg',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:16.975Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json": Error: ENOENT: no such file or directory, open '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json'`,
  [length]: 2 ]
2019-05-31T23:07:16.975Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ -3,
  'Error: couldn\'t find a default input file for name_literal "js/filefg.json": [ -4,\n  `JSONICParse.ParseFilePath: Error: reading file "/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json": Error: ENOENT: no such file or directory, open \'/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json\'`,\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:07:16.976Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ -3,
  'Error: couldn\'t find a default input file for generic_name "js filefg": [ -3,\n  \'Error: couldn\\\'t find a default input file for name_literal "js/filefg.json": [ -4,\\n  `JSONICParse.ParseFilePath: Error: reading file "/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json": Error: ENOENT: no such file or directory, open \\\'/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json\\\'`,\\n  [length]: 2 ]\',\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:07:16.976Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:warn: DefaultInputDataFromGenericName: [ -3,
  'Error: couldn\'t find a default input file for generic_name "js filefg": [ -3,\n  \'Error: couldn\\\'t find a default input file for name_literal "js/filefg.json": [ -4,\\n  `JSONICParse.ParseFilePath: Error: reading file "/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json": Error: ENOENT: no such file or directory, open \\\'/Users/cameron/Library/Application Support/function-factory-nodejs/defaults/js/filefg.json\\\'`,\\n  [length]: 2 ]\',\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:07:17.008Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:07:20.781Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input: 'null' }
2019-05-31T23:07:20.782Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0': { editor_input: 'null' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0': { editor_input: 'null' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:20.783Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ -8,
  'JSONICParse.ParseFileData: Error: parsing stripped_file_data: null',
  [length]: 2 ]
2019-05-31T23:07:20.783Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -8,
  "Error: couldn't construct output from inquirer_editor_answer { editor_input: 'null' }: [ -8,\n  'JSONICParse.ParseFileData: Error: parsing stripped_file_data: null',\n  [length]: 2 ]",
  [length]: 2 ]
2019-05-31T23:07:20.784Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -8,
  "Error: couldn't construct output from inquirer_editor_answer { editor_input: 'null' }: [ -8,\n  'JSONICParse.ParseFileData: Error: parsing stripped_file_data: null',\n  [length]: 2 ]",
  [length]: 2 ]
2019-05-31T23:07:52.153Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:07:52.172Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:52.174Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:07:52.174Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:07:52.175Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T23:07:52.176Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:52.178Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:52.179Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:52.180Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T23:07:52.181Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:52.198Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:07:52.198Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:07:52.198Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:07:52.244Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:07:56.881Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T23:07:56.882Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"templatename": "Resources/templates/jsfile.hbs",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:07:56.883Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { templatename: 'Resources/templates/jsfile.hbs',
  filename: 'jsonic-parse.js',
  description:
   'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
  modulename: 'JSONICParse',
  processname: 'jsonic-parse',
  logger: true } undefined
2019-05-31T23:07:56.924Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: Error: [ -8,
  'Error: couldn\'t find template from name literal "Resources/templates/jsfile.hbs": [ -3,\n  \'Error: couldn\\\'t derive a template_function for name_literal "Resources/templates/jsfile.hbs": [ -3,\\n  `Error: template "/Users/cameron/Library/Application Support/function-factory-nodejs/templates/Resources/templates/jsfile.hbs" cannot be read: Error: ENOENT: no such file or directory, access \\\'/Users/cameron/Library/Application Support/function-factory-nodejs/templates/Resources/templates/jsfile.hbs\\\'`,\\n  [length]: 2 ]\',\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:07:56.924Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ -8,
  'Error: couldn\'t find template from name literal "Resources/templates/jsfile.hbs": [ -3,\n  \'Error: couldn\\\'t derive a template_function for name_literal "Resources/templates/jsfile.hbs": [ -3,\\n  `Error: template "/Users/cameron/Library/Application Support/function-factory-nodejs/templates/Resources/templates/jsfile.hbs" cannot be read: Error: ENOENT: no such file or directory, access \\\'/Users/cameron/Library/Application Support/function-factory-nodejs/templates/Resources/templates/jsfile.hbs\\\'`,\\n  [length]: 2 ]\',\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:07:56.927Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ -4,
  'Error: generating output from given input answer "{ editor_input:\n   \'{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}\' }": [ -8,\n  \'Error: couldn\\\'t find template from name literal "Resources/templates/jsfile.hbs": [ -3,\\n  \\\'Error: couldn\\\\\\\'t derive a template_function for name_literal "Resources/templates/jsfile.hbs": [ -3,\\\\n  `Error: template "/Users/cameron/Library/Application Support/function-factory-nodejs/templates/Resources/templates/jsfile.hbs" cannot be read: Error: ENOENT: no such file or directory, access \\\\\\\'/Users/cameron/Library/Application Support/function-factory-nodejs/templates/Resources/templates/jsfile.hbs\\\\\\\'`,\\\\n  [length]: 2 ]\\\',\\n  [length]: 2 ]\',\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:07:56.929Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -8,
  'Error: couldn\'t construct output from inquirer_editor_answer { editor_input:\n   \'{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}\' }: [ -4,\n  \'Error: generating output from given input answer "{ editor_input:\\n   \\\'{\\\\n\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\n\\\\t"filename": "jsonic-parse.js",\\\\n\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\n\\\\t"modulename": "JSONICParse",\\\\n\\\\t"processname": "jsonic-parse",\\\\n\\\\t"logger": true\\\\n}\\\' }": [ -8,\\n  \\\'Error: couldn\\\\\\\'t find template from name literal "Resources/templates/jsfile.hbs": [ -3,\\\\n  \\\\\\\'Error: couldn\\\\\\\\\\\\\\\'t derive a template_function for name_literal "Resources/templates/jsfile.hbs": [ -3,\\\\\\\\n  `Error: template "/Users/cameron/Library/Application Support/function-factory-nodejs/templates/Resources/templates/jsfile.hbs" cannot be read: Error: ENOENT: no such file or directory, access \\\\\\\\\\\\\\\'/Users/cameron/Library/Application Support/function-factory-nodejs/templates/Resources/templates/jsfile.hbs\\\\\\\\\\\\\\\'`,\\\\\\\\n  [length]: 2 ]\\\\\\\',\\\\n  [length]: 2 ]\\\',\\n  [length]: 2 ]\',\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:07:56.930Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -8,
  'Error: couldn\'t construct output from inquirer_editor_answer { editor_input:\n   \'{\\n\\t"templatename": "Resources/templates/jsfile.hbs",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}\' }: [ -4,\n  \'Error: generating output from given input answer "{ editor_input:\\n   \\\'{\\\\n\\\\t"templatename": "Resources/templates/jsfile.hbs",\\\\n\\\\t"filename": "jsonic-parse.js",\\\\n\\\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\\\n\\\\t"modulename": "JSONICParse",\\\\n\\\\t"processname": "jsonic-parse",\\\\n\\\\t"logger": true\\\\n}\\\' }": [ -8,\\n  \\\'Error: couldn\\\\\\\'t find template from name literal "Resources/templates/jsfile.hbs": [ -3,\\\\n  \\\\\\\'Error: couldn\\\\\\\\\\\\\\\'t derive a template_function for name_literal "Resources/templates/jsfile.hbs": [ -3,\\\\\\\\n  `Error: template "/Users/cameron/Library/Application Support/function-factory-nodejs/templates/Resources/templates/jsfile.hbs" cannot be read: Error: ENOENT: no such file or directory, access \\\\\\\\\\\\\\\'/Users/cameron/Library/Application Support/function-factory-nodejs/templates/Resources/templates/jsfile.hbs\\\\\\\\\\\\\\\'`,\\\\\\\\n  [length]: 2 ]\\\\\\\',\\\\n  [length]: 2 ]\\\',\\n  [length]: 2 ]\',\n  [length]: 2 ]',
  [length]: 2 ]
2019-05-31T23:08:59.351Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:08:59.366Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:08:59.368Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:08:59.368Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:08:59.369Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T23:08:59.370Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:08:59.371Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:08:59.373Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:08:59.374Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T23:08:59.375Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:08:59.419Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:09:24.482Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:09:24.497Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:09:24.499Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:09:24.499Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:09:24.500Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T23:09:24.501Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:09:24.502Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:09:24.503Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:09:24.504Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T23:09:24.505Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:09:24.506Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:09:24.506Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:09:24.506Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:09:24.549Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:09:27.731Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T23:09:27.732Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:09:27.733Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'jsonic-parse.js',
  description:
   'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
  modulename: 'JSONICParse',
  processname: 'jsonic-parse',
  logger: true } undefined
2019-05-31T23:09:27.816Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:09:27.817Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:12:23.200Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:12:23.216Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:12:23.218Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:12:23.218Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:12:23.219Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T23:12:23.220Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:12:23.221Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:12:23.222Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:12:23.224Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T23:12:23.225Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:12:23.226Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:12:23.226Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:12:23.226Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:12:23.266Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:12:27.964Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T23:12:27.965Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:12:27.965Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'jsonic-parse.js',
  description:
   'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
  modulename: 'JSONICParse',
  processname: 'jsonic-parse',
  logger: true } undefined
2019-05-31T23:12:27.993Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:12:27.994Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:20:09.335Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:20:09.353Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:20:09.421Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:20:09.422Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:20:09.423Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T23:20:09.425Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:20:09.426Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:20:09.427Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:20:09.428Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T23:20:09.429Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:20:09.451Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:20:09.452Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:20:09.452Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:20:09.482Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:20:12.440Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T23:20:12.441Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:20:12.442Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'jsonic-parse.js',
  description:
   'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
  modulename: 'JSONICParse',
  processname: 'jsonic-parse',
  logger: true } undefined
2019-05-31T23:20:12.443Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromGenericName]
     [length]: 1,
     [name]: 'TemplateFunctionFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'jsonic-parse.js',
              description:
               'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
              modulename: 'JSONICParse',
              processname: 'jsonic-parse',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:20:12.444Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromNameLiteral]
     [length]: 1,
     [name]: 'TemplateFunctionFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromGenericName]
        [length]: 1,
        [name]: 'TemplateFunctionFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInput]
           [length]: 2,
           [name]: 'OutputFromInput',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInquirerEditorAnswer]
              [length]: 1,
              [name]: 'OutputFromInquirerEditorAnswer',
              [arguments]: [Object],
              [caller]: [AsyncFunction],
              [prototype]: [OutputFromInquirerEditorAnswer] },
           [prototype]: OutputFromInput { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:20:12.445Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:20:12.446Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-05-31T23:20:12.447Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/templates/js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:20:12.461Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:20:12.464Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:20:12.475Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:20:12.510Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:20:12.511Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:23:54.479Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:23:54.547Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:23:54.567Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:23:54.567Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:23:54.568Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T23:23:54.569Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:23:54.570Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:23:54.572Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:23:54.574Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T23:23:54.575Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:23:54.596Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:23:54.596Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:23:54.596Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:23:54.627Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:23:59.721Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T23:23:59.722Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:23:59.723Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'jsonic-parse.js',
  description:
   'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
  modulename: 'JSONICParse',
  processname: 'jsonic-parse',
  logger: true } undefined
2019-05-31T23:23:59.724Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromGenericName]
     [length]: 1,
     [name]: 'TemplateFunctionFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'jsonic-parse.js',
              description:
               'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
              modulename: 'JSONICParse',
              processname: 'jsonic-parse',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:23:59.726Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromNameLiteral]
     [length]: 1,
     [name]: 'TemplateFunctionFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromGenericName]
        [length]: 1,
        [name]: 'TemplateFunctionFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInput]
           [length]: 2,
           [name]: 'OutputFromInput',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInquirerEditorAnswer]
              [length]: 1,
              [name]: 'OutputFromInquirerEditorAnswer',
              [arguments]: [Object],
              [caller]: [AsyncFunction],
              [prototype]: [OutputFromInquirerEditorAnswer] },
           [prototype]: OutputFromInput { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:23:59.737Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:23:59.738Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-05-31T23:23:59.748Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/templates/js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:23:59.772Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:23:59.773Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:23:59.775Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:23:59.805Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]:
   { [Function: OutputApplyPostRE]
     [length]: 2,
     [name]: 'OutputApplyPostRE',
     [arguments]:
      [Arguments] {
        '0':
         `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
        '1': undefined,
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'jsonic-parse.js',
              description:
               'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
              modulename: 'JSONICParse',
              processname: 'jsonic-parse',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]: OutputApplyPostRE { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:23:59.805Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:23:59.805Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:27:25.602Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:27:25.616Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:27:25.632Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:27:25.632Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:27:25.633Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T23:27:25.634Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:27:25.635Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:27:25.653Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:27:25.654Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T23:27:25.655Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:27:25.674Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:27:25.674Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:27:25.675Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:27:25.707Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:27:29.217Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T23:27:29.221Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:27:29.222Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'jsonic-parse.js',
  description:
   'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
  modulename: 'JSONICParse',
  processname: 'jsonic-parse',
  logger: true } undefined
2019-05-31T23:27:29.223Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromGenericName]
     [length]: 1,
     [name]: 'TemplateFunctionFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'jsonic-parse.js',
              description:
               'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
              modulename: 'JSONICParse',
              processname: 'jsonic-parse',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:27:29.225Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromNameLiteral]
     [length]: 1,
     [name]: 'TemplateFunctionFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromGenericName]
        [length]: 1,
        [name]: 'TemplateFunctionFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInput]
           [length]: 2,
           [name]: 'OutputFromInput',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInquirerEditorAnswer]
              [length]: 1,
              [name]: 'OutputFromInquirerEditorAnswer',
              [arguments]: [Object],
              [caller]: [AsyncFunction],
              [prototype]: [OutputFromInquirerEditorAnswer] },
           [prototype]: OutputFromInput { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:27:29.226Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:27:29.227Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-05-31T23:27:29.228Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/templates/js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:27:29.238Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:27:29.239Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:27:29.240Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:27:29.287Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]:
   { [Function: OutputApplyPostRE]
     [length]: 2,
     [name]: 'OutputApplyPostRE',
     [arguments]:
      [Arguments] {
        '0':
         `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
        '1': undefined,
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'jsonic-parse.js',
              description:
               'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
              modulename: 'JSONICParse',
              processname: 'jsonic-parse',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]: OutputApplyPostRE { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:27:29.288Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: Warn: post_re is null: undefined
2019-05-31T23:27:29.297Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:27:29.298Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:31:26.663Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:31:26.678Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:31:26.711Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:31:26.711Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:31:26.712Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T23:31:26.712Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:31:26.716Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:31:26.718Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:31:26.720Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T23:31:26.722Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:31:26.741Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:31:26.741Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:31:26.742Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:31:26.779Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:31:35.655Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T23:31:35.657Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:31:35.658Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'jsonic-parse.js',
  description:
   'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
  modulename: 'JSONICParse',
  processname: 'jsonic-parse',
  logger: true } undefined
2019-05-31T23:31:35.659Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromGenericName]
     [length]: 1,
     [name]: 'TemplateFunctionFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'jsonic-parse.js',
              description:
               'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
              modulename: 'JSONICParse',
              processname: 'jsonic-parse',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:31:35.660Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromNameLiteral]
     [length]: 1,
     [name]: 'TemplateFunctionFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromGenericName]
        [length]: 1,
        [name]: 'TemplateFunctionFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInput]
           [length]: 2,
           [name]: 'OutputFromInput',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInquirerEditorAnswer]
              [length]: 1,
              [name]: 'OutputFromInquirerEditorAnswer',
              [arguments]: [Object],
              [caller]: [AsyncFunction],
              [prototype]: [OutputFromInquirerEditorAnswer] },
           [prototype]: OutputFromInput { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:31:35.667Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:31:35.667Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-05-31T23:31:35.669Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/templates/js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:31:35.684Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:31:35.685Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:31:35.686Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:31:35.730Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]:
   { [Function: OutputApplyPostRE]
     [length]: 2,
     [name]: 'OutputApplyPostRE',
     [arguments]:
      [Arguments] {
        '0':
         `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
        '1': undefined,
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'jsonic-parse.js',
              description:
               'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
              modulename: 'JSONICParse',
              processname: 'jsonic-parse',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]: OutputApplyPostRE { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:31:35.730Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: Warn: post_re is null: undefined
2019-05-31T23:31:35.731Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:31:35.732Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -4,
  `Error: inquirer_questions [ { type: 'editor',\n    name: 'editor_input',\n    message: 'Enter input context (JSON).',\n    default:\n     '{\\n\\t"template": "js file",\\n\\t"filename": "jsonic-parse.js",\\n\\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\\n\\t"modulename": "JSONICParse",\\n\\t"processname": "jsonic-parse",\\n\\t"logger": true\\n}' },\n  [length]: 1 ] causes Inquirer.prompt to throw an error: "ReferenceError: output is not defined"`,
  [length]: 2 ]
2019-05-31T23:41:33.524Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:41:33.538Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:41:33.568Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:41:33.574Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:41:33.576Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file' }
2019-05-31T23:41:33.577Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:41:33.578Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:41:33.579Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:41:33.581Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T23:41:33.581Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:41:33.605Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:41:33.607Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:41:33.607Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:41:33.642Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:41:38.762Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T23:41:38.763Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:41:38.764Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'jsonic-parse.js',
  description:
   'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
  modulename: 'JSONICParse',
  processname: 'jsonic-parse',
  logger: true } undefined
2019-05-31T23:41:38.766Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromGenericName]
     [length]: 1,
     [name]: 'TemplateFunctionFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'jsonic-parse.js',
              description:
               'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
              modulename: 'JSONICParse',
              processname: 'jsonic-parse',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:41:38.768Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromNameLiteral]
     [length]: 1,
     [name]: 'TemplateFunctionFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromGenericName]
        [length]: 1,
        [name]: 'TemplateFunctionFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInput]
           [length]: 2,
           [name]: 'OutputFromInput',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInquirerEditorAnswer]
              [length]: 1,
              [name]: 'OutputFromInquirerEditorAnswer',
              [arguments]: [Object],
              [caller]: [AsyncFunction],
              [prototype]: [OutputFromInquirerEditorAnswer] },
           [prototype]: OutputFromInput { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:41:38.770Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:41:38.770Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-05-31T23:41:38.771Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/templates/js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:41:38.802Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:41:38.803Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:41:38.803Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:41:38.851Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]:
   { [Function: OutputApplyPostRE]
     [length]: 2,
     [name]: 'OutputApplyPostRE',
     [arguments]:
      [Arguments] {
        '0':
         `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
        '1': undefined,
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'jsonic-parse.js',
              description:
               'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
              modulename: 'JSONICParse',
              processname: 'jsonic-parse',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]: OutputApplyPostRE { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:41:38.851Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:warn: Warn: post_re is null: undefined
2019-05-31T23:41:38.851Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [length]: 2 ]
2019-05-31T23:41:38.852Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [ 0,
    `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
    [length]: 2 ],
  [length]: 3 ]
2019-05-31T23:41:38.852Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [length]: 2 ]
2019-05-31T23:41:38.853Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:error: [ -16,
  `Error: couldn't produce output "#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n" wth options { edit: 'js file' }: [ 1, null, [length]: 2 ]`,
  [length]: 2 ]
2019-05-31T23:41:38.853Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ -16,
  `Error: couldn't produce output "#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n" wth options { edit: 'js file' }: [ 1, null, [length]: 2 ]`,
  [length]: 2 ]
2019-05-31T23:45:37.548Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:45:37.563Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:37.610Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:45:37.610Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:45:37.611Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file', stdout: true }
2019-05-31T23:45:37.612Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:37.613Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:37.615Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:37.619Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T23:45:37.620Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:37.639Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:45:37.639Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:45:37.640Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:45:37.671Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:45:43.609Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' }
2019-05-31T23:45:43.610Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:43.611Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'jsonic-parse.js',
  description:
   'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
  modulename: 'JSONICParse',
  processname: 'jsonic-parse',
  logger: true } undefined
2019-05-31T23:45:43.613Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromGenericName]
     [length]: 1,
     [name]: 'TemplateFunctionFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'jsonic-parse.js',
              description:
               'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
              modulename: 'JSONICParse',
              processname: 'jsonic-parse',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:43.614Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromNameLiteral]
     [length]: 1,
     [name]: 'TemplateFunctionFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromGenericName]
        [length]: 1,
        [name]: 'TemplateFunctionFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInput]
           [length]: 2,
           [name]: 'OutputFromInput',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInquirerEditorAnswer]
              [length]: 1,
              [name]: 'OutputFromInquirerEditorAnswer',
              [arguments]: [Object],
              [caller]: [AsyncFunction],
              [prototype]: [OutputFromInquirerEditorAnswer] },
           [prototype]: OutputFromInput { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:43.615Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:43.616Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-05-31T23:45:43.617Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/templates/js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:43.648Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:45:43.649Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:45:43.654Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:45:43.692Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]:
   { [Function: OutputApplyPostRE]
     [length]: 2,
     [name]: 'OutputApplyPostRE',
     [arguments]:
      [Arguments] {
        '0':
         `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
        '1': undefined,
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'jsonic-parse.js',
              description:
               'Parse a JSONIC (JavaScript Object Notation Including Comments) file.',
              modulename: 'JSONICParse',
              processname: 'jsonic-parse',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]: OutputApplyPostRE { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:43.693Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:warn: Warn: post_re is null: undefined
2019-05-31T23:45:43.693Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [length]: 2 ]
2019-05-31T23:45:43.694Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [ 0,
    `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
    [length]: 2 ],
  [length]: 3 ]
2019-05-31T23:45:43.695Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [length]: 2 ]
2019-05-31T23:45:43.696Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  '1': { edit: 'js file', stdout: true },
  [length]: 2,
  [callee]:
   { [Function: ProduceOutput]
     [length]: 2,
     [name]: 'ProduceOutput',
     [arguments]:
      [Arguments] {
        '0':
         `#!/usr/local/bin/node\n/**\n* @file jsonic-parse.js\n* @brief Parse a JSONIC (JavaScript Object Notation Including Comments) file.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'jsonic-parse.js';\nconst MODULE_NAME = 'JSONICParse';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'jsonic-parse';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
        '1': { edit: 'js file', stdout: true },
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: ProduceOutput { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:45:43.722Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-05-31T23:45:43.724Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-05-31T23:46:31.172Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-05-31T23:46:31.186Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:46:31.212Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-05-31T23:46:31.212Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-05-31T23:46:31.216Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file', pasteboard: true }
2019-05-31T23:46:31.218Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:46:31.219Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:46:31.220Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:46:31.221Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-05-31T23:46:31.222Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:46:31.242Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:46:31.242Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:46:31.243Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "jsonic-parse.js",\n\t"description": "Parse a JSONIC (JavaScript Object Notation Including Comments) file.",\n\t"modulename": "JSONICParse",\n\t"processname": "jsonic-parse",\n\t"logger": true\n}',
  [length]: 2 ]
2019-05-31T23:46:31.275Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-05-31T23:47:49.970Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "youtube-video-info.js",\n\t"description": "Get basic, permanent info for the given URL of a YouTube video.",\n\t"modulename": "YouTubeVideoInfo",\n\t"processname": "youtube-video-info",\n\t"logger": true\n}\n' }
2019-05-31T23:47:49.971Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "youtube-video-info.js",\n\t"description": "Get basic, permanent info for the given URL of a YouTube video.",\n\t"modulename": "YouTubeVideoInfo",\n\t"processname": "youtube-video-info",\n\t"logger": true\n}\n' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"template": "js file",\n\t"filename": "youtube-video-info.js",\n\t"description": "Get basic, permanent info for the given URL of a YouTube video.",\n\t"modulename": "YouTubeVideoInfo",\n\t"processname": "youtube-video-info",\n\t"logger": true\n}\n' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:47:49.972Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'youtube-video-info.js',
  description:
   'Get basic, permanent info for the given URL of a YouTube video.',
  modulename: 'YouTubeVideoInfo',
  processname: 'youtube-video-info',
  logger: true } undefined
2019-05-31T23:47:49.974Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromGenericName]
     [length]: 1,
     [name]: 'TemplateFunctionFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'youtube-video-info.js',
              description:
               'Get basic, permanent info for the given URL of a YouTube video.',
              modulename: 'YouTubeVideoInfo',
              processname: 'youtube-video-info',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:47:49.976Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromNameLiteral]
     [length]: 1,
     [name]: 'TemplateFunctionFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromGenericName]
        [length]: 1,
        [name]: 'TemplateFunctionFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInput]
           [length]: 2,
           [name]: 'OutputFromInput',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInquirerEditorAnswer]
              [length]: 1,
              [name]: 'OutputFromInquirerEditorAnswer',
              [arguments]: [Object],
              [caller]: [AsyncFunction],
              [prototype]: [OutputFromInquirerEditorAnswer] },
           [prototype]: OutputFromInput { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:47:49.977Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:47:49.977Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-05-31T23:47:49.978Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/templates/js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:47:50.022Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:47:50.023Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:47:50.024Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-05-31T23:47:50.066Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n/**\n* @file youtube-video-info.js\n* @brief Get basic, permanent info for the given URL of a YouTube video.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'youtube-video-info.js';\nconst MODULE_NAME = 'YouTubeVideoInfo';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'youtube-video-info';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]:
   { [Function: OutputApplyPostRE]
     [length]: 2,
     [name]: 'OutputApplyPostRE',
     [arguments]:
      [Arguments] {
        '0':
         `#!/usr/local/bin/node\n/**\n* @file youtube-video-info.js\n* @brief Get basic, permanent info for the given URL of a YouTube video.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'youtube-video-info.js';\nconst MODULE_NAME = 'YouTubeVideoInfo';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'youtube-video-info';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
        '1': undefined,
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'youtube-video-info.js',
              description:
               'Get basic, permanent info for the given URL of a YouTube video.',
              modulename: 'YouTubeVideoInfo',
              processname: 'youtube-video-info',
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]: OutputApplyPostRE { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:47:50.066Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:warn: Warn: post_re is null: undefined
2019-05-31T23:47:50.067Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  `#!/usr/local/bin/node\n/**\n* @file youtube-video-info.js\n* @brief Get basic, permanent info for the given URL of a YouTube video.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'youtube-video-info.js';\nconst MODULE_NAME = 'YouTubeVideoInfo';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'youtube-video-info';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [length]: 2 ]
2019-05-31T23:47:50.067Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  `#!/usr/local/bin/node\n/**\n* @file youtube-video-info.js\n* @brief Get basic, permanent info for the given URL of a YouTube video.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'youtube-video-info.js';\nconst MODULE_NAME = 'YouTubeVideoInfo';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'youtube-video-info';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [ 0,
    `#!/usr/local/bin/node\n/**\n* @file youtube-video-info.js\n* @brief Get basic, permanent info for the given URL of a YouTube video.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'youtube-video-info.js';\nconst MODULE_NAME = 'YouTubeVideoInfo';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'youtube-video-info';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
    [length]: 2 ],
  [length]: 3 ]
2019-05-31T23:47:50.068Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  `#!/usr/local/bin/node\n/**\n* @file youtube-video-info.js\n* @brief Get basic, permanent info for the given URL of a YouTube video.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'youtube-video-info.js';\nconst MODULE_NAME = 'YouTubeVideoInfo';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'youtube-video-info';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [length]: 2 ]
2019-05-31T23:47:50.069Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n/**\n* @file youtube-video-info.js\n* @brief Get basic, permanent info for the given URL of a YouTube video.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'youtube-video-info.js';\nconst MODULE_NAME = 'YouTubeVideoInfo';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'youtube-video-info';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  '1': { edit: 'js file', pasteboard: true },
  [length]: 2,
  [callee]:
   { [Function: ProduceOutput]
     [length]: 2,
     [name]: 'ProduceOutput',
     [arguments]:
      [Arguments] {
        '0':
         `#!/usr/local/bin/node\n/**\n* @file youtube-video-info.js\n* @brief Get basic, permanent info for the given URL of a YouTube video.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'youtube-video-info.js';\nconst MODULE_NAME = 'YouTubeVideoInfo';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'youtube-video-info';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
        '1': { edit: 'js file', pasteboard: true },
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: ProduceOutput { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-05-31T23:47:50.843Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-05-31T23:47:50.844Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-01T00:53:07.772Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-01T00:53:07.786Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T00:53:07.812Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-01T00:53:07.821Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:note: Logger: DerivedLogger {
  _readableState:
   ReadableState {
     objectMode: true,
     highWaterMark: 16,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes:
      [ Console {
          _writableState:
           WritableState {
             objectMode: true,
             highWaterMark: 16,
             finalCalled: false,
             needDrain: false,
             ending: false,
             ended: false,
             finished: false,
             destroyed: false,
             decodeStrings: true,
             defaultEncoding: 'utf8',
             length: 0,
             writing: false,
             corked: 0,
             sync: false,
             bufferProcessing: false,
             onwrite: [Function],
             writecb: null,
             writelen: 0,
             bufferedRequest: null,
             lastBufferedRequest: null,
             pendingcb: 3,
             prefinished: false,
             errorEmitted: false,
             bufferedRequestCount: 0,
             corkedRequestsFree: [CorkedRequest] },
          writable: true,
          _events:
           [Object: null prototype] {
             unpipe: [Array],
             error: [Array],
             warn: [Function],
             drain: [Function],
             close: [Function],
             finish: [Function] },
          _eventsCount: 6,
          _maxListeners: 30,
          format: Format { options: {}, Format: [Function] },
          level: 'info',
          handleExceptions: undefined,
          silent: undefined,
          name: 'console',
          stderrLevels:
           { emerg: true,
             alert: true,
             crit: true,
             error: true,
             warn: true,
             note: true,
             info: true,
             debug: true },
          consoleWarnLevels: {},
          eol: '\n',
          __winstonerror:
           { [Function: bound transportEvent] [length]: 1, [name]: 'bound transportEvent' },
          __winstonwarn:
           { [Function: bound transportEvent] [length]: 1, [name]: 'bound transportEvent' },
          levels:
           { emerg: 0,
             alert: 1,
             crit: 2,
             error: 3,
             warn: 4,
             note: 5,
             info: 6,
             debug: 7 },
          parent: [Circular] },
        File {
          _writableState:
           WritableState {
             objectMode: true,
             highWaterMark: 16,
             finalCalled: false,
             needDrain: false,
             ending: false,
             ended: false,
             finished: false,
             destroyed: false,
             decodeStrings: true,
             defaultEncoding: 'utf8',
             length: 0,
             writing: false,
             corked: 0,
             sync: false,
             bufferProcessing: false,
             onwrite: [Function],
             writecb: null,
             writelen: 0,
             bufferedRequest: null,
             lastBufferedRequest: null,
             pendingcb: 3,
             prefinished: false,
             errorEmitted: false,
             bufferedRequestCount: 0,
             corkedRequestsFree: [CorkedRequest] },
          writable: true,
          _events:
           [Object: null prototype] {
             unpipe: [Array],
             error: [Array],
             warn: [Function],
             drain: [Function],
             close: [Function],
             finish: [Function] },
          _eventsCount: 6,
          _maxListeners: undefined,
          format: Format { options: {}, Format: [Function] },
          level: 'debug',
          handleExceptions: undefined,
          silent: undefined,
          name: 'file',
          _stream:
           PassThrough {
             _readableState: [ReadableState],
             readable: true,
             _events: [Object],
             _eventsCount: 1,
             _maxListeners: 30,
             _writableState: [WritableState],
             writable: true,
             allowHalfOpen: true,
             _transformState: [Object] },
          _onError:
           { [Function: bound _onError] [length]: 1, [name]: 'bound _onError' },
          filename: 'log_debug.log',
          _basename: 'log_debug.log',
          dirname: '.',
          options: { flags: 'a' },
          maxsize: 1048576,
          rotationFormat: false,
          zippedArchive: false,
          maxFiles: 4,
          eol: '\n',
          tailable: false,
          _size: 0,
          _pendingSize: 2522,
          _created: 0,
          _drain: false,
          _opening: true,
          _ending: false,
          __winstonerror:
           { [Function: bound transportEvent] [length]: 1, [name]: 'bound transportEvent' },
          __winstonwarn:
           { [Function: bound transportEvent] [length]: 1, [name]: 'bound transportEvent' },
          levels:
           { emerg: 0,
             alert: 1,
             crit: 2,
             error: 3,
             warn: 4,
             note: 5,
             info: 6,
             debug: 7 },
          parent: [Circular] },
        [length]: 2 ],
     pipesCount: 2,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     paused: false,
     emitClose: true,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     prefinish:
      { [Function: prefinish]
        [length]: 0,
        [name]: 'prefinish',
        [prototype]: prefinish { [constructor]: [Circular] } },
     end:
      [ { [Function: bound onceWrapper]
          [length]: 0,
          [name]: 'bound onceWrapper',
          listener:
           { [Function: onend] [length]: 0, [name]: 'onend', [prototype]: [onend] } },
        { [Function: bound onceWrapper]
          [length]: 0,
          [name]: 'bound onceWrapper',
          listener:
           { [Function: onend] [length]: 0, [name]: 'onend', [prototype]: [onend] } },
        [length]: 2 ],
     data:
      [ { [Function: ondata]
          [length]: 1,
          [name]: 'ondata',
          [prototype]: ondata { [constructor]: [Circular] } },
        { [Function: ondata]
          [length]: 1,
          [name]: 'ondata',
          [prototype]: ondata { [constructor]: [Circular] } },
        [length]: 2 ] },
  _eventsCount: 3,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: true,
     highWaterMark: 16,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: true,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: false,
     bufferProcessing: false,
     onwrite:
      { [Function]
        [length]: 1,
        [name]: '',
        [prototype]: { [constructor]: [Circular] } },
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 3,
     prefinished: false,
     errorEmitted: false,
     emitClose: true,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      CorkedRequest {
        next: null,
        entry: null,
        finish:
         { [Function]
           [length]: 0,
           [name]: '',
           [prototype]: { [constructor]: [Circular] } } } },
  writable: true,
  allowHalfOpen: true,
  _transformState:
   { afterTransform:
      { [Function: bound afterTransform] [length]: 2, [name]: 'bound afterTransform' },
     needTransform: true,
     transforming: false,
     writecb: null,
     writechunk: null,
     writeencoding: 'utf8' },
  silent: undefined,
  format: Format { options: {} },
  defaultMeta: null,
  levels:
   { emerg: 0,
     alert: 1,
     crit: 2,
     error: 3,
     warn: 4,
     note: 5,
     info: 6,
     debug: 7 },
  level: 'debug',
  exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },
  rejections: RejectionHandler { logger: [Circular], handlers: Map {} },
  profilers: {},
  exitOnError: true }
2019-06-01T00:53:07.821Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-01T23:15:43.303Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-01T23:15:43.357Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:43.442Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-01T23:15:43.442Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-01T23:15:43.469Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js func', stdout: true }
2019-06-01T23:15:43.469Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js func',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:43.470Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/func.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js func',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:43.471Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/func.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/func.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js func',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:43.495Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/func.json": Error: ENOENT: no such file or directory, open 'js/func.json'`,
  [length]: 2 ]
2019-06-01T23:15:43.496Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/func.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/func.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/func.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js func',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:43.513Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-01T23:15:43.513Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-01T23:15:43.513Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-01T23:15:43.558Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-01T23:15:49.583Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}' }
2019-06-01T23:15:49.585Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:49.586Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js func',
  name: 'FunctionName',
  description: 'Brief description.',
  params:
   [ { type: 'ArgumentType',
       name: 'parametre_name',
       default: 'null',
       description: 'Brief parametre description.' },
     [length]: 1 ],
  asynchronous: false,
  post_re:
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ] } undefined
2019-06-01T23:15:49.587Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromGenericName]
     [length]: 1,
     [name]: 'TemplateFunctionFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js func',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js func',
              name: 'FunctionName',
              description: 'Brief description.',
              params: [Array],
              asynchronous: false,
              post_re: [Array] },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:49.588Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromNameLiteral]
     [length]: 1,
     [name]: 'TemplateFunctionFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/func.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromGenericName]
        [length]: 1,
        [name]: 'TemplateFunctionFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js func',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInput]
           [length]: 2,
           [name]: 'OutputFromInput',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInquirerEditorAnswer]
              [length]: 1,
              [name]: 'OutputFromInquirerEditorAnswer',
              [arguments]: [Object],
              [caller]: [AsyncFunction],
              [prototype]: [OutputFromInquirerEditorAnswer] },
           [prototype]: OutputFromInput { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:49.589Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/func.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/func.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js func',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:49.589Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/func.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/func.hbs'`,
  [length]: 2 ]
2019-06-01T23:15:49.590Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/func.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/templates/js/func.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/func.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js func',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:49.672Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-01T23:15:49.672Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-01T23:15:49.673Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-01T23:15:49.746Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name,){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1':
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ],
  [length]: 2,
  [callee]:
   { [Function: OutputApplyPostRE]
     [length]: 2,
     [name]: 'OutputApplyPostRE',
     [arguments]:
      [Arguments] {
        '0':
         "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name,){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
        '1':
         [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ],
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js func',
              name: 'FunctionName',
              description: 'Brief description.',
              params: [Array],
              asynchronous: false,
              post_re: [Array] },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]: OutputApplyPostRE { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:49.747Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-01T23:15:49.747Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [ 0,
    "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
    [length]: 2 ],
  [length]: 3 ]
2019-06-01T23:15:49.747Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-01T23:15:49.748Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1': { edit: 'js func', stdout: true },
  [length]: 2,
  [callee]:
   { [Function: ProduceOutput]
     [length]: 2,
     [name]: 'ProduceOutput',
     [arguments]:
      [Arguments] {
        '0':
         "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
        '1': { edit: 'js func', stdout: true },
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: ProduceOutput { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:15:49.749Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-01T23:15:49.749Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-01T23:19:19.178Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-01T23:19:19.194Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:19:19.220Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-01T23:19:19.220Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:note: Logger, console_stderr transport log level is now: debug
2019-06-01T23:19:19.224Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-01T23:19:19.225Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { verbose: true, edit: 'js func', stdout: true }
2019-06-01T23:19:19.226Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js func',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:19:19.227Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/func.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js func',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:19:19.228Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/func.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/func.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js func',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:19:19.229Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/func.json": Error: ENOENT: no such file or directory, open 'js/func.json'`,
  [length]: 2 ]
2019-06-01T23:19:19.230Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/func.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/func.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/func.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js func',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:19:19.247Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-01T23:19:19.248Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-01T23:19:19.249Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-01T23:19:19.328Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-01T23:20:46.121Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}' }
2019-06-01T23:20:46.122Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}' },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}' },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:20:46.123Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js func',
  name: 'FunctionName',
  description: 'Brief description.',
  params:
   [ { type: 'ArgumentType',
       name: 'parametre_name',
       default: 'null',
       description: 'Brief parametre description.' },
     [length]: 1 ],
  asynchronous: false,
  post_re:
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ] } undefined
2019-06-01T23:20:46.124Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromGenericName]
     [length]: 1,
     [name]: 'TemplateFunctionFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js func',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js func',
              name: 'FunctionName',
              description: 'Brief description.',
              params: [Array],
              asynchronous: false,
              post_re: [Array] },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:20:46.126Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromNameLiteral]
     [length]: 1,
     [name]: 'TemplateFunctionFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/func.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromGenericName]
        [length]: 1,
        [name]: 'TemplateFunctionFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js func',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInput]
           [length]: 2,
           [name]: 'OutputFromInput',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInquirerEditorAnswer]
              [length]: 1,
              [name]: 'OutputFromInquirerEditorAnswer',
              [arguments]: [Object],
              [caller]: [AsyncFunction],
              [prototype]: [OutputFromInquirerEditorAnswer] },
           [prototype]: OutputFromInput { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:20:46.128Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/func.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/func.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js func',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:20:46.129Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/func.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/func.hbs'`,
  [length]: 2 ]
2019-06-01T23:20:46.130Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/func.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/templates/js/func.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/func.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js func',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:20:46.153Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-01T23:20:46.155Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-01T23:20:46.155Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-01T23:20:46.205Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name,){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1':
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ],
  [length]: 2,
  [callee]:
   { [Function: OutputApplyPostRE]
     [length]: 2,
     [name]: 'OutputApplyPostRE',
     [arguments]:
      [Arguments] {
        '0':
         "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name,){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
        '1':
         [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ],
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js func',
              name: 'FunctionName',
              description: 'Brief description.',
              params: [Array],
              asynchronous: false,
              post_re: [Array] },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]: OutputApplyPostRE { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:20:46.206Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-01T23:20:46.206Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [ 0,
    "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
    [length]: 2 ],
  [length]: 3 ]
2019-06-01T23:20:46.207Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-01T23:20:46.208Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1': { verbose: true, edit: 'js func', stdout: true },
  [length]: 2,
  [callee]:
   { [Function: ProduceOutput]
     [length]: 2,
     [name]: 'ProduceOutput',
     [arguments]:
      [Arguments] {
        '0':
         "/**\n* @fn FunctionName\n* @brief Brief description.\n* @param parametre_name\n*\t@type ArgumentType\n*\t@brief Brief parametre description.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FunctionName( parametre_name ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FunctionName';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(parametre_name == undefined) parametre_name = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
        '1': { verbose: true, edit: 'js func', stdout: true },
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: ProduceOutput { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:20:46.213Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-01T23:20:46.213Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-01T23:57:04.267Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-01T23:57:04.301Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]:
   { [Function: ConfigObject_Load]
     [length]: 1,
     [name]: 'ConfigObject_Load',
     [arguments]:
      [Arguments] {
        '0':
         '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function]
        [length]: 5,
        [name]: '',
        [arguments]:
         [Arguments] {
           '0': {},
           '1':
            { [Function: require]
              [length]: 1,
              [name]: 'require',
              [prototype]: [require],
              resolve: [Function],
              main: [Module],
              extensions: [Object],
              cache: [Object] },
           '2':
            Module {
              id: '.',
              path: '/Users/cameron/dev/function-factory/source',
              exports: {},
              parent: null,
              filename: '/Users/cameron/dev/function-factory/source/main.js',
              loaded: false,
              children: [Array],
              paths: [Array] },
           '3': '/Users/cameron/dev/function-factory/source/main.js',
           '4': '/Users/cameron/dev/function-factory/source',
           [length]: 5,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]: null,
        [prototype]: { [constructor]: [Circular] } },
     [prototype]: ConfigObject_Load { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:57:04.344Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-01T23:57:04.344Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-01T23:57:04.363Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file', pasteboard: true }
2019-06-01T23:57:04.364Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromGenericName]
     [length]: 1,
     [name]: 'DefaultInputDataFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]:
      DefaultInputDataFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:57:04.365Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromNameLiteral]
     [length]: 1,
     [name]: 'DefaultInputDataFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromGenericName]
        [length]: 1,
        [name]: 'DefaultInputDataFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
        [prototype]:
         DefaultInputDataFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:57:04.366Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:57:04.367Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-06-01T23:57:04.368Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]:
   { [Function: DefaultInputDataFromPath]
     [length]: 1,
     [name]: 'DefaultInputDataFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/defaults/js/file.json',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: DefaultInputDataFromNameLiteral]
        [length]: 1,
        [name]: 'DefaultInputDataFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.json',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: DefaultInputDataFromGenericName]
           [length]: 1,
           [name]: 'DefaultInputDataFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]:
            DefaultInputDataFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         DefaultInputDataFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: DefaultInputDataFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:57:04.401Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-01T23:57:04.402Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-01T23:57:04.402Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-01T23:57:04.446Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-01T23:59:11.461Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   `{\n\t"template": "js file",\n\t"filename": "js-get.js",\n\t"description": "Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.",\n\t"modulename": "JSGet",\n\t"processname": "js-get",\n\t"strict": true,\n\t"logger": true\n}\n` }
2019-06-01T23:59:11.462Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      `{\n\t"template": "js file",\n\t"filename": "js-get.js",\n\t"description": "Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.",\n\t"modulename": "JSGet",\n\t"processname": "js-get",\n\t"strict": true,\n\t"logger": true\n}\n` },
  [length]: 1,
  [callee]:
   { [Function: OutputFromInquirerEditorAnswer]
     [length]: 1,
     [name]: 'OutputFromInquirerEditorAnswer',
     [arguments]:
      [Arguments] {
        '0':
         { editor_input:
            `{\n\t"template": "js file",\n\t"filename": "js-get.js",\n\t"description": "Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.",\n\t"modulename": "JSGet",\n\t"processname": "js-get",\n\t"strict": true,\n\t"logger": true\n}\n` },
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:59:11.463Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'js-get.js',
  description:
   "Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.",
  modulename: 'JSGet',
  processname: 'js-get',
  strict: true,
  logger: true } undefined
2019-06-01T23:59:11.464Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromGenericName]
     [length]: 1,
     [name]: 'TemplateFunctionFromGenericName',
     [arguments]:
      [Arguments] {
        '0': 'js file',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'js-get.js',
              description:
               "Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.",
              modulename: 'JSGet',
              processname: 'js-get',
              strict: true,
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromGenericName { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:59:11.465Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromNameLiteral]
     [length]: 1,
     [name]: 'TemplateFunctionFromNameLiteral',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromGenericName]
        [length]: 1,
        [name]: 'TemplateFunctionFromGenericName',
        [arguments]:
         [Arguments] {
           '0': 'js file',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInput]
           [length]: 2,
           [name]: 'OutputFromInput',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInquirerEditorAnswer]
              [length]: 1,
              [name]: 'OutputFromInquirerEditorAnswer',
              [arguments]: [Object],
              [caller]: [AsyncFunction],
              [prototype]: [OutputFromInquirerEditorAnswer] },
           [prototype]: OutputFromInput { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromGenericName { [constructor]: [Circular] } },
     [prototype]:
      TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:59:11.466Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:59:11.466Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-06-01T23:59:11.467Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]:
   { [Function: TemplateFunctionFromPath]
     [length]: 1,
     [name]: 'TemplateFunctionFromPath',
     [arguments]:
      [Arguments] {
        '0': 'Resources/templates/js/file.hbs',
        [length]: 1,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: TemplateFunctionFromNameLiteral]
        [length]: 1,
        [name]: 'TemplateFunctionFromNameLiteral',
        [arguments]:
         [Arguments] {
           '0': 'js/file.hbs',
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: TemplateFunctionFromGenericName]
           [length]: 1,
           [name]: 'TemplateFunctionFromGenericName',
           [arguments]:
            [Arguments] {
              '0': 'js file',
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [Function: OutputFromInput]
              [length]: 2,
              [name]: 'OutputFromInput',
              [arguments]: [Object],
              [caller]: [Function],
              [prototype]: [OutputFromInput] },
           [prototype]:
            TemplateFunctionFromGenericName { [constructor]: [Circular] } },
        [prototype]:
         TemplateFunctionFromNameLiteral { [constructor]: [Circular] } },
     [prototype]: TemplateFunctionFromPath { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:59:11.513Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-01T23:59:11.514Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-01T23:59:11.514Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-01T23:59:11.567Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file js-get.js\n* @brief Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'js-get.js';\nconst MODULE_NAME = 'JSGet';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'js-get';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]:
   { [Function: OutputApplyPostRE]
     [length]: 2,
     [name]: 'OutputApplyPostRE',
     [arguments]:
      [Arguments] {
        '0':
         `#!/usr/local/bin/node\n'use strict';\n/**\n* @file js-get.js\n* @brief Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'js-get.js';\nconst MODULE_NAME = 'JSGet';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'js-get';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
        '1': undefined,
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [Function: OutputFromInput]
        [length]: 2,
        [name]: 'OutputFromInput',
        [arguments]:
         [Arguments] {
           '0':
            { template: 'js file',
              filename: 'js-get.js',
              description:
               "Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.",
              modulename: 'JSGet',
              processname: 'js-get',
              strict: true,
              logger: true },
           [length]: 1,
           [callee]: [Circular],
           [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
        [caller]:
         { [Function: OutputFromInquirerEditorAnswer]
           [length]: 1,
           [name]: 'OutputFromInquirerEditorAnswer',
           [arguments]:
            [Arguments] {
              '0': [Object],
              [length]: 1,
              [callee]: [Circular],
              [Symbol(Symbol.iterator)]: [Function] },
           [caller]:
            { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
           [prototype]: OutputFromInquirerEditorAnswer { [constructor]: [Circular] } },
        [prototype]: OutputFromInput { [constructor]: [Circular] } },
     [prototype]: OutputApplyPostRE { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:59:11.567Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:warn: Warn: post_re is null: undefined
2019-06-01T23:59:11.568Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file js-get.js\n* @brief Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'js-get.js';\nconst MODULE_NAME = 'JSGet';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'js-get';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [length]: 2 ]
2019-06-01T23:59:11.568Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file js-get.js\n* @brief Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'js-get.js';\nconst MODULE_NAME = 'JSGet';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'js-get';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [ 0,
    `#!/usr/local/bin/node\n'use strict';\n/**\n* @file js-get.js\n* @brief Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'js-get.js';\nconst MODULE_NAME = 'JSGet';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'js-get';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
    [length]: 2 ],
  [length]: 3 ]
2019-06-01T23:59:11.568Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file js-get.js\n* @brief Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'js-get.js';\nconst MODULE_NAME = 'JSGet';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'js-get';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  [length]: 2 ]
2019-06-01T23:59:11.569Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file js-get.js\n* @brief Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'js-get.js';\nconst MODULE_NAME = 'JSGet';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'js-get';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
  '1': { edit: 'js file', pasteboard: true },
  [length]: 2,
  [callee]:
   { [Function: ProduceOutput]
     [length]: 2,
     [name]: 'ProduceOutput',
     [arguments]:
      [Arguments] {
        '0':
         `#!/usr/local/bin/node\n'use strict';\n/**\n* @file js-get.js\n* @brief Simple, reusable functions for HTTP-Get'ing url and the likes. Mainly an idiomatic wrapper around Request.\n* @author Anadian\n* @copyright MITlicensetm(2019,Canosw)\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'js-get.js';\nconst MODULE_NAME = 'JSGet';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'js-get';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = null;\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( logger == undefined || typeof(logger) !== 'object' ){\n\t\t_return = [-2,'Error: param "logger" is either null or not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t//Constants\n\t//Variables\n\t//Logger\n\t//Options\n\t//Config\n\t//Main\n} else{\n\t\n}\n`,
        '1': { edit: 'js file', pasteboard: true },
        [length]: 2,
        [callee]: [Circular],
        [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } },
     [caller]:
      { [AsyncFunction: Input_Inquirer_Editor] [length]: 1, [name]: 'Input_Inquirer_Editor' },
     [prototype]: ProduceOutput { [constructor]: [Circular] } },
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-01T23:59:12.664Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-01T23:59:12.664Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-05T21:20:10.341Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-05T21:20:10.414Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-05T21:20:10.479Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-05T21:20:10.772Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:error: [ -2, 'Error: no input option specified.', [length]: 2 ]
2019-06-05T21:20:10.774Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-06T02:23:23.324Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-06T02:23:23.397Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-06T02:23:23.451Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-06T02:23:23.451Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In stdin mode.
2019-06-06T02:23:23.499Z function-factory:FunctionFactory:function-factory.js:Input_STDIN:debug: Input_STDIN received: { stdin: true, stdout: true }
2019-06-06T02:23:23.502Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-06T02:24:15.390Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-06T02:24:15.405Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-06T02:24:15.431Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-06T02:24:15.431Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In stdin mode.
2019-06-06T02:24:15.435Z function-factory:FunctionFactory:function-factory.js:Input_STDIN:debug: Input_STDIN received: { stdin: true, stdout: true }
2019-06-06T02:24:15.441Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-06T02:24:15.455Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { name: 'package-name',
  version: 'semver',
  description: 'Package description.',
  main: './source/main.js',
  dependencies: {},
  devDependencies: {},
  scripts: { test: './source/main.js' },
  repository:
   { type: 'git', url: 'https://github.com/Anadian/Pacter.git' },
  keywords: [ 'libre', 'free', 'open', [length]: 3 ],
  author: { name: 'Anadian' },
  license: 'MIT',
  bugs: { url: 'https://github.com/Anadian/Pacter/issues' },
  homepage: '{{repository.url}}#readme' } undefined
2019-06-06T02:24:15.455Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: Error: [ -4,
  "Error: neither templatename nor template is specified in the given input_context { name: 'package-name',\n  version: 'semver',\n  description: 'Package description.',\n  main: './source/main.js',\n  dependencies: {},\n  devDependencies: {},\n  scripts: { test: './source/main.js' },\n  repository:\n   { type: 'git', url: 'https://github.com/Anadian/Pacter.git' },\n  keywords: [ 'libre', 'free', 'open', [length]: 3 ],\n  author: { name: 'Anadian' },\n  license: 'MIT',\n  bugs: { url: 'https://github.com/Anadian/Pacter/issues' },\n  homepage: '{{repository.url}}#readme' }",
  [length]: 2 ]
2019-06-06T02:24:15.455Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ -4,
  "Error: neither templatename nor template is specified in the given input_context { name: 'package-name',\n  version: 'semver',\n  description: 'Package description.',\n  main: './source/main.js',\n  dependencies: {},\n  devDependencies: {},\n  scripts: { test: './source/main.js' },\n  repository:\n   { type: 'git', url: 'https://github.com/Anadian/Pacter.git' },\n  keywords: [ 'libre', 'free', 'open', [length]: 3 ],\n  author: { name: 'Anadian' },\n  license: 'MIT',\n  bugs: { url: 'https://github.com/Anadian/Pacter/issues' },\n  homepage: '{{repository.url}}#readme' }",
  [length]: 2 ]
2019-06-06T02:24:15.456Z function-factory:FunctionFactory:function-factory.js:Input_STDIN:error: [ -4,
  "OutputFromInput: Error: neither templatename nor template is specified in the given input_context { name: 'package-name',\n  version: 'semver',\n  description: 'Package description.',\n  main: './source/main.js',\n  dependencies: {},\n  devDependencies: {},\n  scripts: { test: './source/main.js' },\n  repository:\n   { type: 'git', url: 'https://github.com/Anadian/Pacter.git' },\n  keywords: [ 'libre', 'free', 'open', [length]: 3 ],\n  author: { name: 'Anadian' },\n  license: 'MIT',\n  bugs: { url: 'https://github.com/Anadian/Pacter/issues' },\n  homepage: '{{repository.url}}#readme' }",
  [length]: 2 ]
2019-06-06T02:24:15.456Z function-factory:FunctionFactory:function-factory.js:Input_STDIN:debug: Input_STDIN returned: [ -4,
  "OutputFromInput: Error: neither templatename nor template is specified in the given input_context { name: 'package-name',\n  version: 'semver',\n  description: 'Package description.',\n  main: './source/main.js',\n  dependencies: {},\n  devDependencies: {},\n  scripts: { test: './source/main.js' },\n  repository:\n   { type: 'git', url: 'https://github.com/Anadian/Pacter.git' },\n  keywords: [ 'libre', 'free', 'open', [length]: 3 ],\n  author: { name: 'Anadian' },\n  license: 'MIT',\n  bugs: { url: 'https://github.com/Anadian/Pacter/issues' },\n  homepage: '{{repository.url}}#readme' }",
  [length]: 2 ]
2019-06-06T02:25:11.027Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-06T02:25:11.041Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-06T02:25:11.067Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-06T02:25:11.067Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In stdin mode.
2019-06-06T02:25:11.071Z function-factory:FunctionFactory:function-factory.js:Input_STDIN:debug: Input_STDIN received: { stdin: true,
  stdout: true,
  'template-override': 'js package_json' }
2019-06-06T02:25:11.075Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-06T02:25:11.088Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { name: 'package-name',
  version: 'semver',
  description: 'Package description.',
  main: './source/main.js',
  dependencies: {},
  devDependencies: {},
  scripts: { test: './source/main.js' },
  repository:
   { type: 'git', url: 'https://github.com/Anadian/Pacter.git' },
  keywords: [ 'libre', 'free', 'open', [length]: 3 ],
  author: { name: 'Anadian' },
  license: 'MIT',
  bugs: { url: 'https://github.com/Anadian/Pacter/issues' },
  homepage: '{{repository.url}}#readme' } undefined
2019-06-06T02:25:11.088Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: Error: [ -4,
  "Error: neither templatename nor template is specified in the given input_context { name: 'package-name',\n  version: 'semver',\n  description: 'Package description.',\n  main: './source/main.js',\n  dependencies: {},\n  devDependencies: {},\n  scripts: { test: './source/main.js' },\n  repository:\n   { type: 'git', url: 'https://github.com/Anadian/Pacter.git' },\n  keywords: [ 'libre', 'free', 'open', [length]: 3 ],\n  author: { name: 'Anadian' },\n  license: 'MIT',\n  bugs: { url: 'https://github.com/Anadian/Pacter/issues' },\n  homepage: '{{repository.url}}#readme' }",
  [length]: 2 ]
2019-06-06T02:25:11.088Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ -4,
  "Error: neither templatename nor template is specified in the given input_context { name: 'package-name',\n  version: 'semver',\n  description: 'Package description.',\n  main: './source/main.js',\n  dependencies: {},\n  devDependencies: {},\n  scripts: { test: './source/main.js' },\n  repository:\n   { type: 'git', url: 'https://github.com/Anadian/Pacter.git' },\n  keywords: [ 'libre', 'free', 'open', [length]: 3 ],\n  author: { name: 'Anadian' },\n  license: 'MIT',\n  bugs: { url: 'https://github.com/Anadian/Pacter/issues' },\n  homepage: '{{repository.url}}#readme' }",
  [length]: 2 ]
2019-06-06T02:25:11.089Z function-factory:FunctionFactory:function-factory.js:Input_STDIN:error: [ -4,
  "OutputFromInput: Error: neither templatename nor template is specified in the given input_context { name: 'package-name',\n  version: 'semver',\n  description: 'Package description.',\n  main: './source/main.js',\n  dependencies: {},\n  devDependencies: {},\n  scripts: { test: './source/main.js' },\n  repository:\n   { type: 'git', url: 'https://github.com/Anadian/Pacter.git' },\n  keywords: [ 'libre', 'free', 'open', [length]: 3 ],\n  author: { name: 'Anadian' },\n  license: 'MIT',\n  bugs: { url: 'https://github.com/Anadian/Pacter/issues' },\n  homepage: '{{repository.url}}#readme' }",
  [length]: 2 ]
2019-06-06T02:25:11.089Z function-factory:FunctionFactory:function-factory.js:Input_STDIN:debug: Input_STDIN returned: [ -4,
  "OutputFromInput: Error: neither templatename nor template is specified in the given input_context { name: 'package-name',\n  version: 'semver',\n  description: 'Package description.',\n  main: './source/main.js',\n  dependencies: {},\n  devDependencies: {},\n  scripts: { test: './source/main.js' },\n  repository:\n   { type: 'git', url: 'https://github.com/Anadian/Pacter.git' },\n  keywords: [ 'libre', 'free', 'open', [length]: 3 ],\n  author: { name: 'Anadian' },\n  license: 'MIT',\n  bugs: { url: 'https://github.com/Anadian/Pacter/issues' },\n  homepage: '{{repository.url}}#readme' }",
  [length]: 2 ]
2019-06-08T04:53:51.511Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-08T04:53:51.558Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:53:51.664Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-08T04:53:51.664Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-08T04:53:51.712Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file', pasteboard: true }
2019-06-08T04:53:51.713Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:53:51.714Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:53:51.714Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:53:51.754Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-06-08T04:53:51.754Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:53:51.780Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T04:53:51.781Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T04:53:51.781Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T04:53:51.807Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-08T04:55:50.188Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "safe-recursive-mkdir.js",\n\t"description": "Safely use mkdirSync in recursive mode with less code.",\n\t"modulename": "SafeRecursiveMKDIR",\n\t"processname": "safe-recursive-mkdir",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}\n' }
2019-06-08T04:55:50.188Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "safe-recursive-mkdir.js",\n\t"description": "Safely use mkdirSync in recursive mode with less code.",\n\t"modulename": "SafeRecursiveMKDIR",\n\t"processname": "safe-recursive-mkdir",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}\n' },
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:55:50.189Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'safe-recursive-mkdir.js',
  description: 'Safely use mkdirSync in recursive mode with less code.',
  modulename: 'SafeRecursiveMKDIR',
  processname: 'safe-recursive-mkdir',
  strict: true,
  main: true,
  logger: true } undefined
2019-06-08T04:55:50.189Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:55:50.190Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:55:50.191Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:55:50.191Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-06-08T04:55:50.191Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:55:50.225Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T04:55:50.225Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T04:55:50.226Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T04:55:50.296Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file safe-recursive-mkdir.js\n* @brief Safely use mkdirSync in recursive mode with less code.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'safe-recursive-mkdir.js';\nconst MODULE_NAME = 'SafeRecursiveMKDIR';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'safe-recursive-mkdir';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:55:50.296Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:warn: Warn: post_re is null: undefined
2019-06-08T04:55:50.297Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file safe-recursive-mkdir.js\n* @brief Safely use mkdirSync in recursive mode with less code.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'safe-recursive-mkdir.js';\nconst MODULE_NAME = 'SafeRecursiveMKDIR';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'safe-recursive-mkdir';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
  [length]: 2 ]
2019-06-08T04:55:50.297Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file safe-recursive-mkdir.js\n* @brief Safely use mkdirSync in recursive mode with less code.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'safe-recursive-mkdir.js';\nconst MODULE_NAME = 'SafeRecursiveMKDIR';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'safe-recursive-mkdir';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
  [ 0,
    `#!/usr/local/bin/node\n'use strict';\n/**\n* @file safe-recursive-mkdir.js\n* @brief Safely use mkdirSync in recursive mode with less code.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'safe-recursive-mkdir.js';\nconst MODULE_NAME = 'SafeRecursiveMKDIR';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'safe-recursive-mkdir';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
    [length]: 2 ],
  [length]: 3 ]
2019-06-08T04:55:50.298Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file safe-recursive-mkdir.js\n* @brief Safely use mkdirSync in recursive mode with less code.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'safe-recursive-mkdir.js';\nconst MODULE_NAME = 'SafeRecursiveMKDIR';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'safe-recursive-mkdir';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
  [length]: 2 ]
2019-06-08T04:55:50.299Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file safe-recursive-mkdir.js\n* @brief Safely use mkdirSync in recursive mode with less code.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'safe-recursive-mkdir.js';\nconst MODULE_NAME = 'SafeRecursiveMKDIR';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'safe-recursive-mkdir';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
  '1': { edit: 'js file', pasteboard: true },
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:55:51.230Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-08T04:55:51.231Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-08T04:58:29.822Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-08T04:58:29.835Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:58:29.867Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-08T04:58:29.867Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-08T04:58:29.870Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js func', pasteboard: true }
2019-06-08T04:58:29.871Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:58:29.871Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:58:29.871Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:58:29.872Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/func.json": Error: ENOENT: no such file or directory, open 'js/func.json'`,
  [length]: 2 ]
2019-06-08T04:58:29.873Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T04:58:29.892Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-08T04:58:29.892Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-08T04:58:29.893Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-08T04:58:29.926Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-08T05:00:44.236Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js func",\n\t"name": "SafeRecursiveMKDIR",\n\t"description": "Create a directory, recursively, using FileSystem.mkdirSync.",\n\t"params": [\n\t\t{\n\t\t\t"type": "String",\n\t\t\t"name": "directory_path",\n\t\t\t"default": "null",\n\t\t\t"description": "The path to the directory to create."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}\n' }
2019-06-08T05:00:44.237Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js func",\n\t"name": "SafeRecursiveMKDIR",\n\t"description": "Create a directory, recursively, using FileSystem.mkdirSync.",\n\t"params": [\n\t\t{\n\t\t\t"type": "String",\n\t\t\t"name": "directory_path",\n\t\t\t"default": "null",\n\t\t\t"description": "The path to the directory to create."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}\n' },
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T05:00:44.238Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js func',
  name: 'SafeRecursiveMKDIR',
  description:
   'Create a directory, recursively, using FileSystem.mkdirSync.',
  params:
   [ { type: 'String',
       name: 'directory_path',
       default: 'null',
       description: 'The path to the directory to create.' },
     [length]: 1 ],
  asynchronous: false,
  post_re:
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ] } undefined
2019-06-08T05:00:44.238Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T05:00:44.239Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T05:00:44.240Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T05:00:44.240Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/func.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/func.hbs'`,
  [length]: 2 ]
2019-06-08T05:00:44.240Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T05:00:44.279Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T05:00:44.280Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T05:00:44.280Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T05:00:44.347Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   "/**\n* @fn SafeRecursiveMKDIR\n* @brief Create a directory, recursively, using FileSystem.mkdirSync.\n* @param directory_path\n*\t@type String\n*\t@brief The path to the directory to create.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction SafeRecursiveMKDIR( directory_path,){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'SafeRecursiveMKDIR';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(directory_path == undefined) directory_path = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1':
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ],
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T05:00:44.348Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  "/**\n* @fn SafeRecursiveMKDIR\n* @brief Create a directory, recursively, using FileSystem.mkdirSync.\n* @param directory_path\n*\t@type String\n*\t@brief The path to the directory to create.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction SafeRecursiveMKDIR( directory_path ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'SafeRecursiveMKDIR';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(directory_path == undefined) directory_path = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-08T05:00:44.348Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  "/**\n* @fn SafeRecursiveMKDIR\n* @brief Create a directory, recursively, using FileSystem.mkdirSync.\n* @param directory_path\n*\t@type String\n*\t@brief The path to the directory to create.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction SafeRecursiveMKDIR( directory_path ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'SafeRecursiveMKDIR';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(directory_path == undefined) directory_path = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [ 0,
    "/**\n* @fn SafeRecursiveMKDIR\n* @brief Create a directory, recursively, using FileSystem.mkdirSync.\n* @param directory_path\n*\t@type String\n*\t@brief The path to the directory to create.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction SafeRecursiveMKDIR( directory_path ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'SafeRecursiveMKDIR';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(directory_path == undefined) directory_path = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
    [length]: 2 ],
  [length]: 3 ]
2019-06-08T05:00:44.348Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  "/**\n* @fn SafeRecursiveMKDIR\n* @brief Create a directory, recursively, using FileSystem.mkdirSync.\n* @param directory_path\n*\t@type String\n*\t@brief The path to the directory to create.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction SafeRecursiveMKDIR( directory_path ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'SafeRecursiveMKDIR';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(directory_path == undefined) directory_path = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-08T05:00:44.349Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   "/**\n* @fn SafeRecursiveMKDIR\n* @brief Create a directory, recursively, using FileSystem.mkdirSync.\n* @param directory_path\n*\t@type String\n*\t@brief The path to the directory to create.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction SafeRecursiveMKDIR( directory_path ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'SafeRecursiveMKDIR';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments));\n\t//Parametre checks\n\tif(directory_path == undefined) directory_path = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1': { edit: 'js func', pasteboard: true },
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T05:00:45.123Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-08T05:00:45.123Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-08T20:56:01.764Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-08T20:56:01.827Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:56:01.882Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-08T20:56:01.882Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-08T20:56:01.908Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file', pasteboard: true }
2019-06-08T20:56:01.908Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:56:01.909Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:56:01.910Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:56:01.984Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-06-08T20:56:01.985Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:56:02.012Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T20:56:02.013Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T20:56:02.013Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T20:56:02.068Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-08T20:57:25.769Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "prepare-deluge-columns.js",\n\t"description": "Prepare Deluge columns.",\n\t"modulename": "PrepareDelugeColumns",\n\t"processname": "prepare-deluge-columns",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}\n' }
2019-06-08T20:57:25.770Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "prepare-deluge-columns.js",\n\t"description": "Prepare Deluge columns.",\n\t"modulename": "PrepareDelugeColumns",\n\t"processname": "prepare-deluge-columns",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}\n' },
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:57:25.770Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'prepare-deluge-columns.js',
  description: 'Prepare Deluge columns.',
  modulename: 'PrepareDelugeColumns',
  processname: 'prepare-deluge-columns',
  strict: true,
  main: true,
  logger: true } undefined
2019-06-08T20:57:25.771Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:57:25.771Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:57:25.772Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:57:25.772Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-06-08T20:57:25.772Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:57:25.799Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T20:57:25.803Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T20:57:25.804Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T20:57:25.881Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file prepare-deluge-columns.js\n* @brief Prepare Deluge columns.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'prepare-deluge-columns.js';\nconst MODULE_NAME = 'PrepareDelugeColumns';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'prepare-deluge-columns';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:57:25.881Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:warn: Warn: post_re is null: undefined
2019-06-08T20:57:25.882Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file prepare-deluge-columns.js\n* @brief Prepare Deluge columns.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'prepare-deluge-columns.js';\nconst MODULE_NAME = 'PrepareDelugeColumns';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'prepare-deluge-columns';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
  [length]: 2 ]
2019-06-08T20:57:25.882Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file prepare-deluge-columns.js\n* @brief Prepare Deluge columns.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'prepare-deluge-columns.js';\nconst MODULE_NAME = 'PrepareDelugeColumns';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'prepare-deluge-columns';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
  [ 0,
    `#!/usr/local/bin/node\n'use strict';\n/**\n* @file prepare-deluge-columns.js\n* @brief Prepare Deluge columns.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'prepare-deluge-columns.js';\nconst MODULE_NAME = 'PrepareDelugeColumns';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'prepare-deluge-columns';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
    [length]: 2 ],
  [length]: 3 ]
2019-06-08T20:57:25.883Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file prepare-deluge-columns.js\n* @brief Prepare Deluge columns.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'prepare-deluge-columns.js';\nconst MODULE_NAME = 'PrepareDelugeColumns';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'prepare-deluge-columns';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
  [length]: 2 ]
2019-06-08T20:57:25.883Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file prepare-deluge-columns.js\n* @brief Prepare Deluge columns.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'prepare-deluge-columns.js';\nconst MODULE_NAME = 'PrepareDelugeColumns';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'prepare-deluge-columns';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Set_Logger;\n}\n`,
  '1': { edit: 'js file', pasteboard: true },
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T20:57:26.947Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-08T20:57:26.947Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-08T21:00:10.153Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-08T21:00:10.167Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:00:10.183Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-08T21:00:10.183Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-08T21:00:10.187Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js func', pasteboard: true }
2019-06-08T21:00:10.187Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:00:10.188Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:00:10.188Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:00:10.189Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/func.json": Error: ENOENT: no such file or directory, open 'js/func.json'`,
  [length]: 2 ]
2019-06-08T21:00:10.190Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:00:10.234Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-08T21:00:10.234Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-08T21:00:10.234Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-08T21:00:10.267Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-08T21:01:16.758Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js func",\n\t"name": "PrepareDelugeColumns",\n\t"description": "Prepares Deluge columns via RobotJS.",\n\t/*"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],*/\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}\n' }
2019-06-08T21:01:16.759Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js func",\n\t"name": "PrepareDelugeColumns",\n\t"description": "Prepares Deluge columns via RobotJS.",\n\t/*"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],*/\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}\n' },
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:01:16.760Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js func',
  name: 'PrepareDelugeColumns',
  description: 'Prepares Deluge columns via RobotJS.',
  asynchronous: false,
  post_re:
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ] } undefined
2019-06-08T21:01:16.761Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:01:16.761Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:01:16.762Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:01:16.762Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/func.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/func.hbs'`,
  [length]: 2 ]
2019-06-08T21:01:16.762Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:01:16.797Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T21:01:16.797Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T21:01:16.798Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T21:01:16.869Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   "/**\n* @fn PrepareDelugeColumns\n* @brief Prepares Deluge columns via RobotJS.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction PrepareDelugeColumns(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'PrepareDelugeColumns';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1':
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ],
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:01:16.869Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  "/**\n* @fn PrepareDelugeColumns\n* @brief Prepares Deluge columns via RobotJS.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction PrepareDelugeColumns(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'PrepareDelugeColumns';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-08T21:01:16.870Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  "/**\n* @fn PrepareDelugeColumns\n* @brief Prepares Deluge columns via RobotJS.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction PrepareDelugeColumns(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'PrepareDelugeColumns';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [ 0,
    "/**\n* @fn PrepareDelugeColumns\n* @brief Prepares Deluge columns via RobotJS.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction PrepareDelugeColumns(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'PrepareDelugeColumns';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
    [length]: 2 ],
  [length]: 3 ]
2019-06-08T21:01:16.870Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  "/**\n* @fn PrepareDelugeColumns\n* @brief Prepares Deluge columns via RobotJS.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction PrepareDelugeColumns(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'PrepareDelugeColumns';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-08T21:01:16.870Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   "/**\n* @fn PrepareDelugeColumns\n* @brief Prepares Deluge columns via RobotJS.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction PrepareDelugeColumns(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'PrepareDelugeColumns';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1': { edit: 'js func', pasteboard: true },
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:01:17.225Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-08T21:01:17.225Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-08T21:48:05.306Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-08T21:48:05.345Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:48:05.399Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-08T21:48:05.400Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-08T21:48:05.411Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file', pasteboard: true }
2019-06-08T21:48:05.413Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:48:05.415Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:48:05.416Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:48:05.496Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-06-08T21:48:05.497Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:48:05.514Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T21:48:05.514Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T21:48:05.514Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T21:48:05.554Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-08T21:52:20.838Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "insert-iso-utc-time.js",\n\t"description": "Types the current date and time (UTC) in ISO format.",\n\t"modulename": "InsertISOUTCTime",\n\t"processname": "insert-iso-utc-time",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}\n' }
2019-06-08T21:52:20.838Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "insert-iso-utc-time.js",\n\t"description": "Types the current date and time (UTC) in ISO format.",\n\t"modulename": "InsertISOUTCTime",\n\t"processname": "insert-iso-utc-time",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}\n' },
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:52:20.839Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'insert-iso-utc-time.js',
  description: 'Types the current date and time (UTC) in ISO format.',
  modulename: 'InsertISOUTCTime',
  processname: 'insert-iso-utc-time',
  strict: true,
  main: true,
  logger: true } undefined
2019-06-08T21:52:20.839Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:52:20.840Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:52:20.840Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:52:20.841Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-06-08T21:52:20.841Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:52:20.870Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T21:52:20.870Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T21:52:20.871Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T21:52:20.922Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC) in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:52:20.922Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:warn: Warn: post_re is null: undefined
2019-06-08T21:52:20.923Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC) in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [length]: 2 ]
2019-06-08T21:52:20.923Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC) in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [ 0,
    `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC) in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
    [length]: 2 ],
  [length]: 3 ]
2019-06-08T21:52:20.924Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC) in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [length]: 2 ]
2019-06-08T21:52:20.925Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC) in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{\n\t\tFileSystem.mkdirSync( EnvironmentPaths.log, { recursive: true } );\n\t} catch(error){\n\t\tconsole.error('FileSystem.mkdirSync(%s) threw: %s', EnvironmentPaths.log, error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  '1': { edit: 'js file', pasteboard: true },
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T21:52:22.022Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-08T21:52:22.023Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-08T22:02:28.445Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-08T22:02:28.818Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:02:28.974Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-08T22:02:28.974Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-08T22:02:29.032Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file', pasteboard: true }
2019-06-08T22:02:29.033Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:02:29.034Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:02:29.034Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:02:29.064Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-06-08T22:02:29.065Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:02:29.102Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T22:02:29.102Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T22:02:29.102Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-08T22:02:29.155Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-08T22:07:20.352Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "insert-iso-utc-time.js",\n\t"description": "Types the current date and time (UTC), via Robot.JS, in ISO format.",\n\t"modulename": "InsertISOUTCTime",\n\t"processname": "insert-iso-utc-time",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}\n' }
2019-06-08T22:07:20.352Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "insert-iso-utc-time.js",\n\t"description": "Types the current date and time (UTC), via Robot.JS, in ISO format.",\n\t"modulename": "InsertISOUTCTime",\n\t"processname": "insert-iso-utc-time",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}\n' },
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:07:20.353Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'insert-iso-utc-time.js',
  description:
   'Types the current date and time (UTC), via Robot.JS, in ISO format.',
  modulename: 'InsertISOUTCTime',
  processname: 'insert-iso-utc-time',
  strict: true,
  main: true,
  logger: true } undefined
2019-06-08T22:07:20.353Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:07:20.354Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:07:20.354Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:07:20.355Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-06-08T22:07:20.355Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:07:20.386Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T22:07:20.386Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T22:07:20.386Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T22:07:20.444Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC), via Robot.JS, in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:07:20.444Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:warn: Warn: post_re is null: undefined
2019-06-08T22:07:20.445Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC), via Robot.JS, in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [length]: 2 ]
2019-06-08T22:07:20.445Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC), via Robot.JS, in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [ 0,
    `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC), via Robot.JS, in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
    [length]: 2 ],
  [length]: 3 ]
2019-06-08T22:07:20.446Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC), via Robot.JS, in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [length]: 2 ]
2019-06-08T22:07:20.447Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file insert-iso-utc-time.js\n* @brief Types the current date and time (UTC), via Robot.JS, in ISO format.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'insert-iso-utc-time.js';\nconst MODULE_NAME = 'InsertISOUTCTime';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'insert-iso-utc-time';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  '1': { edit: 'js file', pasteboard: true },
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:07:20.710Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-08T22:07:20.711Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-08T22:08:08.092Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-08T22:08:08.107Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:08:08.109Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-08T22:08:08.109Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-08T22:08:08.124Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js func', pasteboard: true }
2019-06-08T22:08:08.125Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:08:08.125Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:08:08.125Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:08:08.126Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/func.json": Error: ENOENT: no such file or directory, open 'js/func.json'`,
  [length]: 2 ]
2019-06-08T22:08:08.127Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:08:08.150Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-08T22:08:08.151Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-08T22:08:08.151Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-08T22:08:08.205Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-08T22:09:22.310Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js func",\n\t"name": "TypeISOUTCTime",\n\t"description": "Types the current date and time (UTC) in ISO format.",\n\t/*"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],*/\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}\n' }
2019-06-08T22:09:22.311Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js func",\n\t"name": "TypeISOUTCTime",\n\t"description": "Types the current date and time (UTC) in ISO format.",\n\t/*"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],*/\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}\n' },
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:09:22.312Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js func',
  name: 'TypeISOUTCTime',
  description: 'Types the current date and time (UTC) in ISO format.',
  asynchronous: false,
  post_re:
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ] } undefined
2019-06-08T22:09:22.312Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:09:22.313Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:09:22.313Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:09:22.313Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/func.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/func.hbs'`,
  [length]: 2 ]
2019-06-08T22:09:22.314Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:09:22.375Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T22:09:22.376Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T22:09:22.377Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-08T22:09:22.422Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   "/**\n* @fn TypeISOUTCTime\n* @brief Types the current date and time (UTC) in ISO format.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction TypeISOUTCTime(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'TypeISOUTCTime';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1':
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ],
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:09:22.422Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  "/**\n* @fn TypeISOUTCTime\n* @brief Types the current date and time (UTC) in ISO format.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction TypeISOUTCTime(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'TypeISOUTCTime';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-08T22:09:22.423Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  "/**\n* @fn TypeISOUTCTime\n* @brief Types the current date and time (UTC) in ISO format.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction TypeISOUTCTime(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'TypeISOUTCTime';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [ 0,
    "/**\n* @fn TypeISOUTCTime\n* @brief Types the current date and time (UTC) in ISO format.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction TypeISOUTCTime(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'TypeISOUTCTime';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
    [length]: 2 ],
  [length]: 3 ]
2019-06-08T22:09:22.423Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  "/**\n* @fn TypeISOUTCTime\n* @brief Types the current date and time (UTC) in ISO format.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction TypeISOUTCTime(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'TypeISOUTCTime';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-08T22:09:22.424Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   "/**\n* @fn TypeISOUTCTime\n* @brief Types the current date and time (UTC) in ISO format.\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction TypeISOUTCTime(){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'TypeISOUTCTime';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1': { edit: 'js func', pasteboard: true },
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-08T22:09:22.502Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-08T22:09:22.502Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-14T05:03:41.621Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-14T05:03:41.635Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:03:41.680Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-14T05:03:41.680Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-14T05:03:41.684Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file', pasteboard: true }
2019-06-14T05:03:41.684Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:03:41.685Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:03:41.685Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:03:41.709Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-06-14T05:03:41.710Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:03:41.752Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-14T05:03:41.752Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-14T05:03:41.752Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}',
  [length]: 2 ]
2019-06-14T05:03:41.782Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-14T05:05:54.398Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "move-list.js",\n\t"description": "Move files in a list from one filesystem path to another.",\n\t"modulename": "MoveList",\n\t"processname": "move-list",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}\n' }
2019-06-14T05:05:54.399Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "move-list.js",\n\t"description": "Move files in a list from one filesystem path to another.",\n\t"modulename": "MoveList",\n\t"processname": "move-list",\n\t"strict": true,\n\t"main": true,\n\t"logger": true\n}\n' },
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:05:54.399Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'move-list.js',
  description: 'Move files in a list from one filesystem path to another.',
  modulename: 'MoveList',
  processname: 'move-list',
  strict: true,
  main: true,
  logger: true } undefined
2019-06-14T05:05:54.400Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:05:54.400Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:05:54.401Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:05:54.401Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-06-14T05:05:54.402Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:05:54.485Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T05:05:54.485Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T05:05:54.486Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T05:05:54.539Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-list.js\n* @brief Move files in a list from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-list.js';\nconst MODULE_NAME = 'MoveList';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-list';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:05:54.539Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:warn: Warn: post_re is null: undefined
2019-06-14T05:05:54.540Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-list.js\n* @brief Move files in a list from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-list.js';\nconst MODULE_NAME = 'MoveList';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-list';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [length]: 2 ]
2019-06-14T05:05:54.540Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-list.js\n* @brief Move files in a list from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-list.js';\nconst MODULE_NAME = 'MoveList';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-list';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [ 0,
    `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-list.js\n* @brief Move files in a list from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-list.js';\nconst MODULE_NAME = 'MoveList';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-list';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
    [length]: 2 ],
  [length]: 3 ]
2019-06-14T05:05:54.541Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-list.js\n* @brief Move files in a list from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-list.js';\nconst MODULE_NAME = 'MoveList';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-list';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [length]: 2 ]
2019-06-14T05:05:54.541Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-list.js\n* @brief Move files in a list from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-list.js';\nconst MODULE_NAME = 'MoveList';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-list';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst SafeRecursiveMKDIR = require('safe-recursive-mkdir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\tfunction_return = SafeRecursiveMKDIR.mkdirSyncRecursiveSafe( EnvironmentPaths.log );\n\tif( function_return[0] !== 0 ){\n\t\tconsole.error('SafeRecursiveMKDIR.mkdirSyncRecursiveSafe(%s) returned: %o', EnvironmentPaths.log, _return);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\t//Config\n\t//Main\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  '1': { edit: 'js file', pasteboard: true },
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:05:55.702Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-14T05:05:55.703Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-14T05:43:16.981Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-14T05:43:17.044Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:43:17.076Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-14T05:43:17.076Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-14T05:43:17.094Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js file', pasteboard: true }
2019-06-14T05:43:17.095Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:43:17.095Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:43:17.096Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:43:17.100Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/file.json": Error: ENOENT: no such file or directory, open 'js/file.json'`,
  [length]: 2 ]
2019-06-14T05:43:17.101Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/file.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:43:17.121Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true,\n\t"cli": true\n}',
  [length]: 2 ]
2019-06-14T05:43:17.121Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true,\n\t"cli": true\n}',
  [length]: 2 ]
2019-06-14T05:43:17.121Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js file",\n\t"filename": "filename.js",\n\t"description": "Brief description.",\n\t"modulename": "ModuleName",\n\t"processname": "process-name",\n\t"strict": true,\n\t"main": true,\n\t"logger": true,\n\t"cli": true\n}',
  [length]: 2 ]
2019-06-14T05:43:17.189Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-14T05:44:57.875Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js file",\n\t"filename": "move-files-array.js",\n\t"description": "Moves files listed in an array from one filesystem path to another.",\n\t"modulename": "MoveFilesArray",\n\t"processname": "move-files-array",\n\t"strict": true,\n\t"main": true,\n\t"logger": true,\n\t"cli": true\n}\n' }
2019-06-14T05:44:57.875Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js file",\n\t"filename": "move-files-array.js",\n\t"description": "Moves files listed in an array from one filesystem path to another.",\n\t"modulename": "MoveFilesArray",\n\t"processname": "move-files-array",\n\t"strict": true,\n\t"main": true,\n\t"logger": true,\n\t"cli": true\n}\n' },
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:44:57.876Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js file',
  filename: 'move-files-array.js',
  description:
   'Moves files listed in an array from one filesystem path to another.',
  modulename: 'MoveFilesArray',
  processname: 'move-files-array',
  strict: true,
  main: true,
  logger: true,
  cli: true } undefined
2019-06-14T05:44:57.876Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js file',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:44:57.877Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:44:57.877Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:44:57.878Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/file.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/file.hbs'`,
  [length]: 2 ]
2019-06-14T05:44:57.878Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/file.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:44:57.916Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T05:44:57.916Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T05:44:57.917Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T05:44:57.995Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-files-array.js\n* @brief Moves files listed in an array from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-files-array.js';\nconst MODULE_NAME = 'MoveFilesArray';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-files-array';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst MakeDir = require('make-dir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\tconst CommandLineArgs = require('command-line-args');\n\tconst CommandLineUsage = require('command-line-usage');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\tconst OptionDefinitions = [\n\t\t//UI\n\t\t{ name: 'help', alias: 'h', type: Boolean, description: 'Writes this help text to stdout.' },\n\t\t{ name: 'verbose', alias: 'v', type: Boolean, description: 'Verbose output to stderr.' },\n\t\t{ name: 'Version', alias: 'V', type: Boolean, description: 'Writes version information to stdout.'},\n\t\t//Input\n\t\t{ name: 'stdin', alias: 'i', type: Boolean, description: 'Read input from stdin.' },\n\t\t{ name: 'input', alias: 'I', type: String, description: 'The path to the file to read input from.'},\n\t\t//Output\n\t\t{ name: 'stdout', alias: 'o', type: Boolean, description: 'Write output to stdout.' },\n\t\t{ name: 'output', alias: 'O', type: String, description: 'The name of the file to write output to.' },\n\t\t{ name: 'pasteboard', alias: 'p', type: Boolean, description: 'Copy output to pasteboard (clipboard).'},\n\t\t//Config\n\t\t{ name: 'config', alias: 'c', type: Boolean, description: 'Print configuration values and information to stdout.' },\n\t\t{ name: 'config-file', alias: 'C', type: String, description: 'Use the given config file instead of the default.' },\n\t];\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{ \n\t\tMakeDir.sync( EnvironmentPaths.log );\n\t} catch(error){\n\t\tconsole.error('MakeDir.sync threw: %s', error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\tvar Options = CommandLineArguments( OptionDefinitions );\n\t//Config\n\t//Main\n\tif(Options.help === true){\n\t\tconst help_sections_array = [\n\t\t\t{\n\t\t\t\theader: 'move-files-array',\n\t\t\t\tcontent: 'Moves files listed in an array from one filesystem path to another.',\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: 'Options',\n\t\t\t\toptionList: OptionDefinitions\n\t\t\t}\n\t\t]\n\t\tconst help_message = CommandLineUsage(help_sections_array);\n\t\tconsole.log(help_message);\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  '1': undefined,
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:44:57.995Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:warn: Warn: post_re is null: undefined
2019-06-14T05:44:57.996Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-files-array.js\n* @brief Moves files listed in an array from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-files-array.js';\nconst MODULE_NAME = 'MoveFilesArray';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-files-array';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst MakeDir = require('make-dir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\tconst CommandLineArgs = require('command-line-args');\n\tconst CommandLineUsage = require('command-line-usage');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\tconst OptionDefinitions = [\n\t\t//UI\n\t\t{ name: 'help', alias: 'h', type: Boolean, description: 'Writes this help text to stdout.' },\n\t\t{ name: 'verbose', alias: 'v', type: Boolean, description: 'Verbose output to stderr.' },\n\t\t{ name: 'Version', alias: 'V', type: Boolean, description: 'Writes version information to stdout.'},\n\t\t//Input\n\t\t{ name: 'stdin', alias: 'i', type: Boolean, description: 'Read input from stdin.' },\n\t\t{ name: 'input', alias: 'I', type: String, description: 'The path to the file to read input from.'},\n\t\t//Output\n\t\t{ name: 'stdout', alias: 'o', type: Boolean, description: 'Write output to stdout.' },\n\t\t{ name: 'output', alias: 'O', type: String, description: 'The name of the file to write output to.' },\n\t\t{ name: 'pasteboard', alias: 'p', type: Boolean, description: 'Copy output to pasteboard (clipboard).'},\n\t\t//Config\n\t\t{ name: 'config', alias: 'c', type: Boolean, description: 'Print configuration values and information to stdout.' },\n\t\t{ name: 'config-file', alias: 'C', type: String, description: 'Use the given config file instead of the default.' },\n\t];\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{ \n\t\tMakeDir.sync( EnvironmentPaths.log );\n\t} catch(error){\n\t\tconsole.error('MakeDir.sync threw: %s', error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\tvar Options = CommandLineArguments( OptionDefinitions );\n\t//Config\n\t//Main\n\tif(Options.help === true){\n\t\tconst help_sections_array = [\n\t\t\t{\n\t\t\t\theader: 'move-files-array',\n\t\t\t\tcontent: 'Moves files listed in an array from one filesystem path to another.',\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: 'Options',\n\t\t\t\toptionList: OptionDefinitions\n\t\t\t}\n\t\t]\n\t\tconst help_message = CommandLineUsage(help_sections_array);\n\t\tconsole.log(help_message);\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [length]: 2 ]
2019-06-14T05:44:57.997Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-files-array.js\n* @brief Moves files listed in an array from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-files-array.js';\nconst MODULE_NAME = 'MoveFilesArray';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-files-array';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst MakeDir = require('make-dir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\tconst CommandLineArgs = require('command-line-args');\n\tconst CommandLineUsage = require('command-line-usage');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\tconst OptionDefinitions = [\n\t\t//UI\n\t\t{ name: 'help', alias: 'h', type: Boolean, description: 'Writes this help text to stdout.' },\n\t\t{ name: 'verbose', alias: 'v', type: Boolean, description: 'Verbose output to stderr.' },\n\t\t{ name: 'Version', alias: 'V', type: Boolean, description: 'Writes version information to stdout.'},\n\t\t//Input\n\t\t{ name: 'stdin', alias: 'i', type: Boolean, description: 'Read input from stdin.' },\n\t\t{ name: 'input', alias: 'I', type: String, description: 'The path to the file to read input from.'},\n\t\t//Output\n\t\t{ name: 'stdout', alias: 'o', type: Boolean, description: 'Write output to stdout.' },\n\t\t{ name: 'output', alias: 'O', type: String, description: 'The name of the file to write output to.' },\n\t\t{ name: 'pasteboard', alias: 'p', type: Boolean, description: 'Copy output to pasteboard (clipboard).'},\n\t\t//Config\n\t\t{ name: 'config', alias: 'c', type: Boolean, description: 'Print configuration values and information to stdout.' },\n\t\t{ name: 'config-file', alias: 'C', type: String, description: 'Use the given config file instead of the default.' },\n\t];\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{ \n\t\tMakeDir.sync( EnvironmentPaths.log );\n\t} catch(error){\n\t\tconsole.error('MakeDir.sync threw: %s', error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\tvar Options = CommandLineArguments( OptionDefinitions );\n\t//Config\n\t//Main\n\tif(Options.help === true){\n\t\tconst help_sections_array = [\n\t\t\t{\n\t\t\t\theader: 'move-files-array',\n\t\t\t\tcontent: 'Moves files listed in an array from one filesystem path to another.',\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: 'Options',\n\t\t\t\toptionList: OptionDefinitions\n\t\t\t}\n\t\t]\n\t\tconst help_message = CommandLineUsage(help_sections_array);\n\t\tconsole.log(help_message);\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [ 0,
    `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-files-array.js\n* @brief Moves files listed in an array from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-files-array.js';\nconst MODULE_NAME = 'MoveFilesArray';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-files-array';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst MakeDir = require('make-dir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\tconst CommandLineArgs = require('command-line-args');\n\tconst CommandLineUsage = require('command-line-usage');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\tconst OptionDefinitions = [\n\t\t//UI\n\t\t{ name: 'help', alias: 'h', type: Boolean, description: 'Writes this help text to stdout.' },\n\t\t{ name: 'verbose', alias: 'v', type: Boolean, description: 'Verbose output to stderr.' },\n\t\t{ name: 'Version', alias: 'V', type: Boolean, description: 'Writes version information to stdout.'},\n\t\t//Input\n\t\t{ name: 'stdin', alias: 'i', type: Boolean, description: 'Read input from stdin.' },\n\t\t{ name: 'input', alias: 'I', type: String, description: 'The path to the file to read input from.'},\n\t\t//Output\n\t\t{ name: 'stdout', alias: 'o', type: Boolean, description: 'Write output to stdout.' },\n\t\t{ name: 'output', alias: 'O', type: String, description: 'The name of the file to write output to.' },\n\t\t{ name: 'pasteboard', alias: 'p', type: Boolean, description: 'Copy output to pasteboard (clipboard).'},\n\t\t//Config\n\t\t{ name: 'config', alias: 'c', type: Boolean, description: 'Print configuration values and information to stdout.' },\n\t\t{ name: 'config-file', alias: 'C', type: String, description: 'Use the given config file instead of the default.' },\n\t];\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{ \n\t\tMakeDir.sync( EnvironmentPaths.log );\n\t} catch(error){\n\t\tconsole.error('MakeDir.sync threw: %s', error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\tvar Options = CommandLineArguments( OptionDefinitions );\n\t//Config\n\t//Main\n\tif(Options.help === true){\n\t\tconst help_sections_array = [\n\t\t\t{\n\t\t\t\theader: 'move-files-array',\n\t\t\t\tcontent: 'Moves files listed in an array from one filesystem path to another.',\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: 'Options',\n\t\t\t\toptionList: OptionDefinitions\n\t\t\t}\n\t\t]\n\t\tconst help_message = CommandLineUsage(help_sections_array);\n\t\tconsole.log(help_message);\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
    [length]: 2 ],
  [length]: 3 ]
2019-06-14T05:44:57.997Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-files-array.js\n* @brief Moves files listed in an array from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-files-array.js';\nconst MODULE_NAME = 'MoveFilesArray';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-files-array';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst MakeDir = require('make-dir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\tconst CommandLineArgs = require('command-line-args');\n\tconst CommandLineUsage = require('command-line-usage');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\tconst OptionDefinitions = [\n\t\t//UI\n\t\t{ name: 'help', alias: 'h', type: Boolean, description: 'Writes this help text to stdout.' },\n\t\t{ name: 'verbose', alias: 'v', type: Boolean, description: 'Verbose output to stderr.' },\n\t\t{ name: 'Version', alias: 'V', type: Boolean, description: 'Writes version information to stdout.'},\n\t\t//Input\n\t\t{ name: 'stdin', alias: 'i', type: Boolean, description: 'Read input from stdin.' },\n\t\t{ name: 'input', alias: 'I', type: String, description: 'The path to the file to read input from.'},\n\t\t//Output\n\t\t{ name: 'stdout', alias: 'o', type: Boolean, description: 'Write output to stdout.' },\n\t\t{ name: 'output', alias: 'O', type: String, description: 'The name of the file to write output to.' },\n\t\t{ name: 'pasteboard', alias: 'p', type: Boolean, description: 'Copy output to pasteboard (clipboard).'},\n\t\t//Config\n\t\t{ name: 'config', alias: 'c', type: Boolean, description: 'Print configuration values and information to stdout.' },\n\t\t{ name: 'config-file', alias: 'C', type: String, description: 'Use the given config file instead of the default.' },\n\t];\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{ \n\t\tMakeDir.sync( EnvironmentPaths.log );\n\t} catch(error){\n\t\tconsole.error('MakeDir.sync threw: %s', error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\tvar Options = CommandLineArguments( OptionDefinitions );\n\t//Config\n\t//Main\n\tif(Options.help === true){\n\t\tconst help_sections_array = [\n\t\t\t{\n\t\t\t\theader: 'move-files-array',\n\t\t\t\tcontent: 'Moves files listed in an array from one filesystem path to another.',\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: 'Options',\n\t\t\t\toptionList: OptionDefinitions\n\t\t\t}\n\t\t]\n\t\tconst help_message = CommandLineUsage(help_sections_array);\n\t\tconsole.log(help_message);\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  [length]: 2 ]
2019-06-14T05:44:57.998Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   `#!/usr/local/bin/node\n'use strict';\n/**\n* @file move-files-array.js\n* @brief Moves files listed in an array from one filesystem path to another.\n* @author Anadian\n* @copyright \tCopyright 2019 Canosw\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this \nsoftware and associated documentation files (the "Software"), to deal in the Software \nwithout restriction, including without limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to the following \nconditions:\n\tThe above copyright notice and this permission notice shall be included in all copies \nor substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A \nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT \nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//Dependencies\n\t//Internal\n\t//Standard\n\tconst Utility = require('util');\n\t//External\n\n//Constants\nconst FILENAME = 'move-files-array.js';\nconst MODULE_NAME = 'MoveFilesArray';\nvar PROCESS_NAME = '';\nif(require.main === module){\n\tPROCESS_NAME = 'move-files-array';\n} else{\n\tPROCESS_NAME = process.argv0;\n}\n\n//Global Variables\nvar Logger = { \n\tlog: () => {\n\t\treturn null;\n\t}\n};\n//Functions\nfunction Logger_Set( logger ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'Logger_Set';\n\t//Variables\n\tvar function_return = [1,null];\n\n\t//Parametre checks\n\tif( typeof(logger) === 'object' ){\n\t\tif( logger === null ){\n\t\t\tlogger = { \n\t\t\t\tlog: () => {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else{\n\t\t_return = [-2,'Error: param "logger" is not an object.'];\n\t}\n\n\t//Function\n\tif( _return[0] === 1 ){\n\t\tLogger = logger;\n\t\t_return = [0,null];\n\t}\n\n\t//Return\n\treturn _return;\n}\n\n//Exports and Execution\nif(require.main === module){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MainExecutionFunction';\n\t//Dependencies\n\t\t//Internal\n\t\t//Standard\n\t\t//External\n\t\tconst MakeDir = require('make-dir');\n\t\tconst ApplicationLogWinstonInterface = require('application-log-winston-interface');\n\t\tconst EnvPaths = require('env-paths');\n\tconst CommandLineArgs = require('command-line-args');\n\tconst CommandLineUsage = require('command-line-usage');\n\t//Constants\n\tconst EnvironmentPaths = EnvPaths( PROCESS_NAME );\n\tconst OptionDefinitions = [\n\t\t//UI\n\t\t{ name: 'help', alias: 'h', type: Boolean, description: 'Writes this help text to stdout.' },\n\t\t{ name: 'verbose', alias: 'v', type: Boolean, description: 'Verbose output to stderr.' },\n\t\t{ name: 'Version', alias: 'V', type: Boolean, description: 'Writes version information to stdout.'},\n\t\t//Input\n\t\t{ name: 'stdin', alias: 'i', type: Boolean, description: 'Read input from stdin.' },\n\t\t{ name: 'input', alias: 'I', type: String, description: 'The path to the file to read input from.'},\n\t\t//Output\n\t\t{ name: 'stdout', alias: 'o', type: Boolean, description: 'Write output to stdout.' },\n\t\t{ name: 'output', alias: 'O', type: String, description: 'The name of the file to write output to.' },\n\t\t{ name: 'pasteboard', alias: 'p', type: Boolean, description: 'Copy output to pasteboard (clipboard).'},\n\t\t//Config\n\t\t{ name: 'config', alias: 'c', type: Boolean, description: 'Print configuration values and information to stdout.' },\n\t\t{ name: 'config-file', alias: 'C', type: String, description: 'Use the given config file instead of the default.' },\n\t];\n\t//Variables\n\tvar function_return = [1,null];\n\t//Logger\n\ttry{ \n\t\tMakeDir.sync( EnvironmentPaths.log );\n\t} catch(error){\n\t\tconsole.error('MakeDir.sync threw: %s', error);\n\t}\n\tfunction_return = ApplicationLogWinstonInterface.InitLogger('debug.log', EnvironmentPaths.log);\n\tif( function_return[0] === 0 ){\n\t\tLogger_Set( function_return[1] );\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'Start of execution block.'});\n\t//Options\n\tvar Options = CommandLineArguments( OptionDefinitions );\n\t//Config\n\t//Main\n\tif(Options.help === true){\n\t\tconst help_sections_array = [\n\t\t\t{\n\t\t\t\theader: 'move-files-array',\n\t\t\t\tcontent: 'Moves files listed in an array from one filesystem path to another.',\n\t\t\t},\n\t\t\t{\n\t\t\t\theader: 'Options',\n\t\t\t\toptionList: OptionDefinitions\n\t\t\t}\n\t\t]\n\t\tconst help_message = CommandLineUsage(help_sections_array);\n\t\tconsole.log(help_message);\n\t}\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: 'End of execution block.'});\n} else{\n\texports.SetLogger = Logger_Set;\n}\n`,
  '1': { edit: 'js file', pasteboard: true },
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T05:44:58.569Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-14T05:44:58.569Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-14T20:07:51.644Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-14T20:07:51.678Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:07:51.727Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-14T20:07:51.727Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-14T20:07:51.731Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js func', pasteboard: true }
2019-06-14T20:07:51.732Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:07:51.732Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:07:51.733Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:07:51.758Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/func.json": Error: ENOENT: no such file or directory, open 'js/func.json'`,
  [length]: 2 ]
2019-06-14T20:07:51.758Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:07:51.787Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-14T20:07:51.787Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-14T20:07:51.787Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-14T20:07:51.815Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-14T20:11:47.746Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   '{\n\t"template": "js func",\n\t"name": "FilesArrayFromInputData",\n\t"description": "Create an array of filepaths from a string, listing line-separated files.",\n\t"params": [\n\t\t{\n\t\t\t"type": "String",\n\t\t\t"name": "input_string",\n\t\t\t"default": "null",\n\t\t\t"description": "The string of files, separated by line."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}\n' }
2019-06-14T20:11:47.747Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      '{\n\t"template": "js func",\n\t"name": "FilesArrayFromInputData",\n\t"description": "Create an array of filepaths from a string, listing line-separated files.",\n\t"params": [\n\t\t{\n\t\t\t"type": "String",\n\t\t\t"name": "input_string",\n\t\t\t"default": "null",\n\t\t\t"description": "The string of files, separated by line."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}\n' },
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:11:47.747Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js func',
  name: 'FilesArrayFromInputData',
  description:
   'Create an array of filepaths from a string, listing line-separated files.',
  params:
   [ { type: 'String',
       name: 'input_string',
       default: 'null',
       description: 'The string of files, separated by line.' },
     [length]: 1 ],
  asynchronous: false,
  post_re:
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ] } undefined
2019-06-14T20:11:47.748Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:11:47.748Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:11:47.749Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:11:47.749Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/func.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/func.hbs'`,
  [length]: 2 ]
2019-06-14T20:11:47.749Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:11:47.801Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T20:11:47.802Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T20:11:47.802Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T20:11:47.878Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   "/**\n* @fn FilesArrayFromInputData\n* @brief Create an array of filepaths from a string, listing line-separated files.\n* @param input_string\n*\t@type String\n*\t@brief The string of files, separated by line.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FilesArrayFromInputData( input_string,){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FilesArrayFromInputData';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(input_string == undefined) input_string = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1':
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ],
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:11:47.878Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  "/**\n* @fn FilesArrayFromInputData\n* @brief Create an array of filepaths from a string, listing line-separated files.\n* @param input_string\n*\t@type String\n*\t@brief The string of files, separated by line.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FilesArrayFromInputData( input_string ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FilesArrayFromInputData';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(input_string == undefined) input_string = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-14T20:11:47.878Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  "/**\n* @fn FilesArrayFromInputData\n* @brief Create an array of filepaths from a string, listing line-separated files.\n* @param input_string\n*\t@type String\n*\t@brief The string of files, separated by line.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FilesArrayFromInputData( input_string ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FilesArrayFromInputData';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(input_string == undefined) input_string = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [ 0,
    "/**\n* @fn FilesArrayFromInputData\n* @brief Create an array of filepaths from a string, listing line-separated files.\n* @param input_string\n*\t@type String\n*\t@brief The string of files, separated by line.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FilesArrayFromInputData( input_string ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FilesArrayFromInputData';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(input_string == undefined) input_string = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
    [length]: 2 ],
  [length]: 3 ]
2019-06-14T20:11:47.878Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  "/**\n* @fn FilesArrayFromInputData\n* @brief Create an array of filepaths from a string, listing line-separated files.\n* @param input_string\n*\t@type String\n*\t@brief The string of files, separated by line.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FilesArrayFromInputData( input_string ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FilesArrayFromInputData';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(input_string == undefined) input_string = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-14T20:11:47.879Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   "/**\n* @fn FilesArrayFromInputData\n* @brief Create an array of filepaths from a string, listing line-separated files.\n* @param input_string\n*\t@type String\n*\t@brief The string of files, separated by line.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction FilesArrayFromInputData( input_string ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'FilesArrayFromInputData';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(input_string == undefined) input_string = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1': { edit: 'js func', pasteboard: true },
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:11:48.541Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-14T20:11:48.542Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
2019-06-14T20:20:41.078Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: Start of execution block.
2019-06-14T20:20:41.092Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load received: [Arguments] {
  '0':
   '/Users/cameron/Library/Preferences/function-factory-nodejs/config.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:20:41.123Z function-factory:FunctionFactory:function-factory.js:ConfigObject_Load:debug: ConfigObject_Load returned: [ 0,
  { template_directories:
     [ 'Resources/templates',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/templates',
       [length]: 2 ],
    defaults_directories:
     [ 'Resources/defaults',
       '/Users/cameron/Library/Application Support/function-factory-nodejs/defaults',
       [length]: 2 ] },
  [length]: 2 ]
2019-06-14T20:20:41.123Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:info: In editor mode.
2019-06-14T20:20:41.127Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor received: { edit: 'js func', pasteboard: true }
2019-06-14T20:20:41.127Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:20:41.128Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:20:41.128Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:20:41.129Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ -4,
  `JSONICParse.ParseFilePath: Error: reading file "js/func.json": Error: ENOENT: no such file or directory, open 'js/func.json'`,
  [length]: 2 ]
2019-06-14T20:20:41.130Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: received: [Arguments] {
  '0': 'Resources/defaults/js/func.json',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:20:41.150Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromPath:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-14T20:20:41.150Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromNameLiteral:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-14T20:20:41.150Z function-factory:FunctionFactory:function-factory.js:DefaultInputDataFromGenericName:debug: returned: [ 0,
  '{\n\t"template": "js func",\n\t"name": "FunctionName",\n\t"description": "Brief description.",\n\t"params": [\n\t\t{\n\t\t\t"type": "ArgumentType",\n\t\t\t"name": "parametre_name",\n\t\t\t"default": "null",\n\t\t\t"description": "Brief parametre description."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}',
  [length]: 2 ]
2019-06-14T20:20:41.181Z function-factory:FunctionFactory:function-factory.js:MainExecutionFunction:debug: End of execution block.
2019-06-14T20:28:56.166Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: inquirer_answer: { editor_input:
   `{\n\t"template": "js func",\n\t"name": "MoveFilesArray",\n\t"description": "Moves each file in the array from <source-prefix>/<array[index]:filename> to <destination-directory>/<array[index]:filename>",\n\t"params": [\n\t\t{\n\t\t\t"type": "Array",\n\t\t\t"name": "files_array",\n\t\t\t"default": "null",\n\t\t\t"description": "The array of filepaths to be moved."\n\t\t},\n\t\t{\n\t\t\t"type": "String",\n\t\t\t"name": "source_prefix",\n\t\t\t"default": "null",\n\t\t\t"description": "The directory the 'files_array' files are currently relative to."\n\t\t},\n\t\t{\n\t\t\t"type": "String",\n\t\t\t"name": "destination_directory",\n\t\t\t"default": "null",\n\t\t\t"description": "The directory the files will be moved to."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}\n` }
2019-06-14T20:28:56.167Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer received: [Arguments] {
  '0':
   { editor_input:
      `{\n\t"template": "js func",\n\t"name": "MoveFilesArray",\n\t"description": "Moves each file in the array from <source-prefix>/<array[index]:filename> to <destination-directory>/<array[index]:filename>",\n\t"params": [\n\t\t{\n\t\t\t"type": "Array",\n\t\t\t"name": "files_array",\n\t\t\t"default": "null",\n\t\t\t"description": "The array of filepaths to be moved."\n\t\t},\n\t\t{\n\t\t\t"type": "String",\n\t\t\t"name": "source_prefix",\n\t\t\t"default": "null",\n\t\t\t"description": "The directory the 'files_array' files are currently relative to."\n\t\t},\n\t\t{\n\t\t\t"type": "String",\n\t\t\t"name": "destination_directory",\n\t\t\t"default": "null",\n\t\t\t"description": "The directory the files will be moved to."\n\t\t}\n\t],\n\t"asynchronous": false,\n\t"post_re": [\n\t\t{\n\t\t\t"search": ",\\\\)",\n\t\t\t"replace": " )",\n\t\t\t"flags": "gm"\n\t\t}\n\t]\n}\n` },
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:28:56.168Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OuputputFromInput received: { template: 'js func',
  name: 'MoveFilesArray',
  description:
   'Moves each file in the array from <source-prefix>/<array[index]:filename> to <destination-directory>/<array[index]:filename>',
  params:
   [ { type: 'Array',
       name: 'files_array',
       default: 'null',
       description: 'The array of filepaths to be moved.' },
     { type: 'String',
       name: 'source_prefix',
       default: 'null',
       description:
        "The directory the 'files_array' files are currently relative to." },
     { type: 'String',
       name: 'destination_directory',
       default: 'null',
       description: 'The directory the files will be moved to.' },
     [length]: 3 ],
  asynchronous: false,
  post_re:
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ] } undefined
2019-06-14T20:28:56.169Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: received: [Arguments] {
  '0': 'js func',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:28:56.170Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:28:56.170Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:28:56.171Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ -3,
  `Error: template "js/func.hbs" cannot be read: Error: ENOENT: no such file or directory, access 'js/func.hbs'`,
  [length]: 2 ]
2019-06-14T20:28:56.171Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: received: [Arguments] {
  '0': 'Resources/templates/js/func.hbs',
  [length]: 1,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:28:56.220Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromPath:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T20:28:56.220Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromNameLiteral:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T20:28:56.221Z function-factory:FunctionFactory:function-factory.js:TemplateFunctionFromGenericName:debug: returned: [ 0,
  { [Function: ret]
    [length]: 2,
    [name]: 'ret',
    [prototype]: ret { [constructor]: [Circular] },
    _setup:
     { [Function]
       [length]: 1,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } },
    _child:
     { [Function]
       [length]: 4,
       [name]: '',
       [prototype]: { [constructor]: [Circular] } } },
  [length]: 2 ]
2019-06-14T20:28:56.297Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: received: [Arguments] {
  '0':
   "/**\n* @fn MoveFilesArray\n* @brief Moves each file in the array from <source-prefix>/<array[index]:filename> to <destination-directory>/<array[index]:filename>\n* @param files_array\n*\t@type Array\n*\t@brief The array of filepaths to be moved.\n*\t@default null\n* @param source_prefix\n*\t@type String\n*\t@brief The directory the 'files_array' files are currently relative to.\n*\t@default null\n* @param destination_directory\n*\t@type String\n*\t@brief The directory the files will be moved to.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction MoveFilesArray( files_array, source_prefix, destination_directory,){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MoveFilesArray';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(files_array == undefined) files_array = null;\n\tif(source_prefix == undefined) source_prefix = null;\n\tif(destination_directory == undefined) destination_directory = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1':
   [ { search: ',\\)', replace: ' )', flags: 'gm' }, [length]: 1 ],
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:28:56.298Z function-factory:FunctionFactory:function-factory.js:OutputApplyPostRE:debug: returned: [ 0,
  "/**\n* @fn MoveFilesArray\n* @brief Moves each file in the array from <source-prefix>/<array[index]:filename> to <destination-directory>/<array[index]:filename>\n* @param files_array\n*\t@type Array\n*\t@brief The array of filepaths to be moved.\n*\t@default null\n* @param source_prefix\n*\t@type String\n*\t@brief The directory the 'files_array' files are currently relative to.\n*\t@default null\n* @param destination_directory\n*\t@type String\n*\t@brief The directory the files will be moved to.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction MoveFilesArray( files_array, source_prefix, destination_directory ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MoveFilesArray';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(files_array == undefined) files_array = null;\n\tif(source_prefix == undefined) source_prefix = null;\n\tif(destination_directory == undefined) destination_directory = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-14T20:28:56.298Z function-factory:FunctionFactory:function-factory.js:OutputFromInput:debug: OutputFromInput returned: [ 0,
  "/**\n* @fn MoveFilesArray\n* @brief Moves each file in the array from <source-prefix>/<array[index]:filename> to <destination-directory>/<array[index]:filename>\n* @param files_array\n*\t@type Array\n*\t@brief The array of filepaths to be moved.\n*\t@default null\n* @param source_prefix\n*\t@type String\n*\t@brief The directory the 'files_array' files are currently relative to.\n*\t@default null\n* @param destination_directory\n*\t@type String\n*\t@brief The directory the files will be moved to.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction MoveFilesArray( files_array, source_prefix, destination_directory ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MoveFilesArray';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(files_array == undefined) files_array = null;\n\tif(source_prefix == undefined) source_prefix = null;\n\tif(destination_directory == undefined) destination_directory = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [ 0,
    "/**\n* @fn MoveFilesArray\n* @brief Moves each file in the array from <source-prefix>/<array[index]:filename> to <destination-directory>/<array[index]:filename>\n* @param files_array\n*\t@type Array\n*\t@brief The array of filepaths to be moved.\n*\t@default null\n* @param source_prefix\n*\t@type String\n*\t@brief The directory the 'files_array' files are currently relative to.\n*\t@default null\n* @param destination_directory\n*\t@type String\n*\t@brief The directory the files will be moved to.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction MoveFilesArray( files_array, source_prefix, destination_directory ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MoveFilesArray';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(files_array == undefined) files_array = null;\n\tif(source_prefix == undefined) source_prefix = null;\n\tif(destination_directory == undefined) destination_directory = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
    [length]: 2 ],
  [length]: 3 ]
2019-06-14T20:28:56.298Z function-factory:FunctionFactory:function-factory.js:OutputFromInquirerEditorAnswer:debug: OutputFromInquirerEditorAnswer returned: [ 0,
  "/**\n* @fn MoveFilesArray\n* @brief Moves each file in the array from <source-prefix>/<array[index]:filename> to <destination-directory>/<array[index]:filename>\n* @param files_array\n*\t@type Array\n*\t@brief The array of filepaths to be moved.\n*\t@default null\n* @param source_prefix\n*\t@type String\n*\t@brief The directory the 'files_array' files are currently relative to.\n*\t@default null\n* @param destination_directory\n*\t@type String\n*\t@brief The directory the files will be moved to.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction MoveFilesArray( files_array, source_prefix, destination_directory ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MoveFilesArray';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(files_array == undefined) files_array = null;\n\tif(source_prefix == undefined) source_prefix = null;\n\tif(destination_directory == undefined) destination_directory = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  [length]: 2 ]
2019-06-14T20:28:56.299Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: received: [Arguments] {
  '0':
   "/**\n* @fn MoveFilesArray\n* @brief Moves each file in the array from <source-prefix>/<array[index]:filename> to <destination-directory>/<array[index]:filename>\n* @param files_array\n*\t@type Array\n*\t@brief The array of filepaths to be moved.\n*\t@default null\n* @param source_prefix\n*\t@type String\n*\t@brief The directory the 'files_array' files are currently relative to.\n*\t@default null\n* @param destination_directory\n*\t@type String\n*\t@brief The directory the files will be moved to.\n*\t@default null\n* @return <ARRAY>\n*\t@entry 0 \n*\t\t@retval 1 premature return.\n*\t\t@retval 0 on success.\n*\t\t@retval <0 on failure.\n*\t@entry 1\n*\t\t@retval <object> on success\n*\t\t@retval <error_message> on failure.\n*/\nfunction MoveFilesArray( files_array, source_prefix, destination_directory ){\n\tvar _return = [1,null];\n\tconst FUNCTION_NAME = 'MoveFilesArray';\n\t//Variables\n\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('received: ', arguments)});\n\t//Parametre checks\n\tif(files_array == undefined) files_array = null;\n\tif(source_prefix == undefined) source_prefix = null;\n\tif(destination_directory == undefined) destination_directory = null;\n\t\n\t//Function\n\n\t//Return\n\tLogger.log({process: PROCESS_NAME, module: MODULE_NAME, file: FILENAME, function: FUNCTION_NAME, level: 'debug', message: Utility.format('returned: ', _return)});\n\treturn _return;\n}\n",
  '1': { edit: 'js func', pasteboard: true },
  [length]: 2,
  [callee]: [Getter/Setter],
  [Symbol(Symbol.iterator)]: { [Function: values] [length]: 0, [name]: 'values' } }
2019-06-14T20:28:56.825Z function-factory:FunctionFactory:function-factory.js:ProduceOutput:debug: returned: [ 0, null, [length]: 2 ]
2019-06-14T20:28:56.825Z function-factory:FunctionFactory:function-factory.js:Input_Inquirer_Editor:debug: Input_Inquirer_Editor returned: [ 0, null, [length]: 2 ]
